function CK_ = CK(q,dq,time,param)

x = q( 1 ); 
y = q( 2 ); 
z = q( 3 ); 
a = q( 4 ); 
b = q( 5 ); 
c = q( 6 ); 
thetaW_R = q( 7 ); 
uW_R = q( 8 ); 
uR_R = q( 9 ); 
xR_R = q( 10 ); 
thetaW_L = q( 11 ); 
uW_L = q( 12 ); 
uR_L = q( 13 ); 
xR_L = q( 14 ); 

dx = dq( 1 ); 
dy = dq( 2 ); 
dz = dq( 3 ); 
da = dq( 4 ); 
db = dq( 5 ); 
dc = dq( 6 ); 
dthetaW_R = dq( 7 ); 
duW_R = dq( 8 ); 
duR_R = dq( 9 ); 
dxR_R = dq( 10 ); 
dthetaW_L = dq( 11 ); 
duW_L = dq( 12 ); 
duR_L = dq( 13 ); 
dxR_L = dq( 14 ); 

t= time ;

g = param( 1 ); 
a_pend = param( 2 ); 
b_pend = param( 3 ); 
L_R = param( 4 ); 
L_WHS = param( 5 ); 
a_rail = param( 6 ); 
mWHS = param( 7 ); 
I_WHSx = param( 8 ); 
I_WHSy = param( 9 ); 
I_WHSz = param( 10 ); 
tor = param( 11 ); 
aW_R = param( 12 ); 
bW_R = param( 13 ); 
cW_R = param( 14 ); 
dW_R = param( 15 ); 
lW_R = param( 16 ); 
aR_R = param( 17 ); 
bR_R = param( 18 ); 
cR_R = param( 19 ); 
dR_R = param( 20 ); 
lR_R = param( 21 ); 
aW_L = param( 22 ); 
bW_L = param( 23 ); 
cW_L = param( 24 ); 
dW_L = param( 25 ); 
lW_L = param( 26 ); 
aR_L = param( 27 ); 
bR_L = param( 28 ); 
cR_L = param( 29 ); 
dR_L = param( 30 ); 
lR_L = param( 31 ); 
E_elastic = param( 32 ); 
nu_poisson = param( 33 ); 
G_elastic = param( 34 ); 
aR = param( 35 ); 
bR = param( 36 ); 
aL = param( 37 ); 
bL = param( 38 ); 
C11R = param( 39 ); 
C22R = param( 40 ); 
C23R = param( 41 ); 
C33R = param( 42 ); 
C11L = param( 43 ); 
C22L = param( 44 ); 
C23L = param( 45 ); 
C33L = param( 46 ); 

atom9 = cos(a_pend);
atom8 = sin(b_pend);
atom13 = -atom9*atom8;
atom7 = cos(b_pend);
atom10 = sin(a_pend);
atom11 = atom10*atom8;
atom2359 = atom7^2+atom11^2+atom13^2;
atom2680 = -aR*G_elastic*C11R*atom2359*bR;
atom2536 = -G_elastic*atom2359*bL*C11L*aL;
atom372 = uR_R-lR_R;
atom373 = aR_R*atom372;
atom374 = atom373+bR_R;
atom390 = atom374*atom372+(atom374+atom373)*atom372+cR_R;
atom380 = sin(-a_rail);
atom379 = cos(-a_rail);
atom394 = atom390*atom379+atom380;
atom392 = -atom390*atom380+atom379;
atom398 = (atom392^2+atom394^2)^(-1/2);
atom400 = atom392*atom398;
atom399 = -atom398*atom394;
atom14 = atom7*atom9;
atom2369 = atom10*atom400-atom399*atom14;
atom12 = -atom7*atom10;
atom2364 = atom9*atom400-atom399*atom12;
atom2360 = -atom399*atom8;
atom2371 = atom11*atom2364+atom7*atom2360+atom2369*atom13;
atom2681 = -C22R*aR*G_elastic*atom2371*bR;
atom482 = uR_L-lR_L;
atom501 = atom482*(2*aR_L*atom482+bR_L)+cR_L+atom482*(aR_L*atom482+bR_L);
atom489 = cos(a_rail);
atom490 = sin(a_rail);
atom505 = atom501*atom489+atom490;
atom503 = atom489-atom501*atom490;
atom509 = (atom505^2+atom503^2)^(-1/2);
atom510 = -atom505*atom509;
atom511 = atom509*atom503;
atom2452 = atom9*atom511-atom510*atom12;
atom2448 = -atom510*atom8;
atom2457 = -atom510*atom14+atom10*atom511;
atom2459 = atom7*atom2448+atom11*atom2452+atom2457*atom13;
atom2537 = -G_elastic*C22L*atom2459*bL*aL;
atom4 = sin(a);
atom309 = lW_R-uW_R;
atom315 = -dW_R+atom309*(atom309*(aW_R*atom309-bW_R)+cW_R);
atom3 = cos(a);
atom318 = -atom315*cos(thetaW_R);
atom307 = -(0.5)*L_WHS;
atom321 = atom307*atom4;
atom631 = atom321+atom3*atom318+uW_R*atom4;
atom6 = sin(c);
atom688 = atom631*atom6;
atom5 = cos(c);
atom144 = -atom3*atom6;
atom319 = atom144*atom307;
atom316 = sin(thetaW_R)*atom315;
atom145 = atom6*atom4;
atom629 = atom316*atom5+atom144*uW_R+atom319+atom318*atom145;
atom147 = -atom5*atom4;
atom146 = atom3*atom5;
atom320 = atom146*atom307;
atom630 = atom318*atom147+atom146*uW_R+atom316*atom6+atom320;
atom2674 = -atom631*atom5*atom400+atom399*(atom629*atom6-atom5*atom630);
atom2683 = sqrt(aR*bR);
atom2679 = atom6*atom399;
atom2684 = -C23R*atom2683*aR*G_elastic*atom2371*bR;
atom421 = lW_L-uW_L;
atom427 = -(atom421*(bW_L-atom421*aW_L)-cW_L)*atom421-dW_L;
atom430 = -atom427*cos(thetaW_L);
atom768 = -atom321+atom3*atom430+uW_L*atom4;
atom819 = atom6*atom768;
atom428 = atom427*sin(thetaW_L);
atom766 = atom428*atom5+atom144*uW_L+atom145*atom430-atom319;
atom767 = atom147*atom430+atom428*atom6+atom146*uW_L-atom320;
atom2530 = -atom511*atom5*atom768-atom510*(atom767*atom5-atom6*atom766);
atom2539 = sqrt(bL*aL);
atom2535 = atom510*atom6;
atom2540 = -atom2539*C23L*G_elastic*atom2459*bL*aL;
atom951 = atom510*atom146+atom511*atom4;
atom849 = atom146*atom768-atom767*atom4;
atom852 = -atom144*atom768+atom4*atom766;
atom855 = -atom146*atom766+atom767*atom144;
atom2533 = -atom510*atom855+atom511*atom852;
atom899 = atom146*atom399+atom400*atom4;
atom718 = atom631*atom146-atom4*atom630;
atom721 = atom629*atom4-atom631*atom144;
atom724 = atom144*atom630-atom629*atom146;
atom2677 = -atom399*atom724+atom721*atom400;
atom2534 = atom511*atom766;
atom2678 = atom629*atom400;
atom2374 = atom10*atom13+atom11*atom9;
atom2685 = -atom2374*aR*G_elastic*C11R*bR;
atom2541 = -atom2374*G_elastic*bL*C11L*aL;
atom2377 = atom10*atom2369+atom9*atom2364;
atom2686 = -C22R*aR*G_elastic*atom2377*bR;
atom2462 = atom9*atom2452+atom10*atom2457;
atom2542 = -atom2462*G_elastic*C22L*bL*aL;
atom2687 = -C23R*atom2683*aR*G_elastic*atom2377*bR;
atom2543 = -atom2462*atom2539*C23L*G_elastic*bL*aL;
atom2382 = atom14*atom13+atom7*atom8+atom11*atom12;
atom2688 = -aR*G_elastic*C11R*atom2382*bR;
atom2544 = -G_elastic*atom2382*bL*C11L*aL;
atom2467 = atom2448*atom8+atom2457*atom14+atom12*atom2452;
atom2545 = -G_elastic*C22L*bL*atom2467*aL;
atom2387 = atom2360*atom8+atom2369*atom14+atom12*atom2364;
atom2689 = -C22R*atom2387*aR*G_elastic*bR;
atom2690 = -C23R*atom2683*atom2387*aR*G_elastic*bR;
atom2546 = -atom2539*C23L*G_elastic*bL*atom2467*aL;
atom2 = sin(b);
atom71 = -atom3*atom2;
atom1 = cos(b);
atom72 = atom3*atom1;
atom2220 = atom2*atom72+atom71*atom1;
atom156 = -atom2*atom147+atom6*atom1;
atom159 = atom147*atom1+atom6*atom2;
atom2224 = atom159*atom2+atom156*atom1;
atom2226 = -atom2220*atom630+atom631*atom2224;
atom153 = atom2*atom5+atom1*atom145;
atom150 = atom5*atom1-atom2*atom145;
atom2230 = atom2*atom153+atom1*atom150;
atom2232 = -atom631*atom2230+atom2220*atom629;
atom2235 = -atom629*atom2224+atom2230*atom630;
atom2316 = -atom768*atom2230+atom2220*atom766;
atom2313 = atom768*atom2224-atom767*atom2220;
atom2319 = -atom2224*atom766+atom767*atom2230;
atom2691 = -aR*G_elastic*C11R*(atom2382*atom2235+atom2374*atom2232+atom2226*atom2359)*bR;
atom2547 = -G_elastic*bL*C11L*aL*(atom2359*atom2313+atom2374*atom2316+atom2319*atom2382);
atom19 = atom6*atom9+atom11*atom5;
atom22 = -atom11*atom6+atom9*atom5;
atom40 = atom3*atom12-atom22*atom4;
atom2402 = atom399*atom9+atom12*atom400;
atom58 = atom2*atom19+atom40*atom1;
atom16 = -atom7*atom6;
atom34 = atom3*atom8-atom16*atom4;
atom15 = atom7*atom5;
atom52 = atom2*atom15+atom1*atom34;
atom2398 = atom8*atom400;
atom25 = atom10*atom6+atom5*atom13;
atom28 = atom10*atom5-atom6*atom13;
atom46 = -atom28*atom4+atom3*atom14;
atom2407 = atom14*atom400+atom10*atom399;
atom64 = atom46*atom1+atom25*atom2;
atom2415 = atom2407*atom64+atom2402*atom58+atom52*atom2398;
atom55 = -atom40*atom2+atom1*atom19;
atom49 = atom1*atom15-atom2*atom34;
atom61 = -atom2*atom46+atom25*atom1;
atom2409 = atom2407*atom61+atom49*atom2398+atom55*atom2402;
atom2417 = atom2*atom2415+atom1*atom2409;
atom2397 = atom2387*atom2235+atom2226*atom2371+atom2232*atom2377;
atom2694 = -C22R*aR*G_elastic*atom2397*bR+C23R*atom2417*atom2683*aR*G_elastic*bR;
atom2478 = atom511*atom8;
atom2482 = atom12*atom511+atom510*atom9;
atom2487 = atom510*atom10+atom511*atom14;
atom2495 = atom2482*atom58+atom2487*atom64+atom52*atom2478;
atom2489 = atom55*atom2482+atom49*atom2478+atom2487*atom61;
atom2497 = atom2*atom2495+atom1*atom2489;
atom2477 = atom2319*atom2467+atom2462*atom2316+atom2459*atom2313;
atom2550 = -G_elastic*C22L*bL*atom2477*aL+atom2539*C23L*G_elastic*bL*atom2497*aL;
atom2696 = aR^2;
atom2697 = bR^2;
atom2699 = -C23R*atom2683*aR*G_elastic*atom2397*bR-atom2696*atom2417*atom2697*G_elastic*C33R;
atom2552 = bL^2;
atom2553 = aL^2;
atom2555 = -C33L*atom2552*atom2553*G_elastic*atom2497-atom2539*C23L*G_elastic*bL*atom2477*aL;
atom2700 = -aR*G_elastic*(atom2382*atom724+atom721*atom2374+atom2359*atom718)*C11R*bR;
atom2556 = -G_elastic*bL*C11L*(atom855*atom2382+atom2374*atom852+atom2359*atom849)*aL;
atom31 = atom8*atom4+atom3*atom16;
atom37 = atom12*atom4+atom3*atom22;
atom43 = atom14*atom4+atom3*atom28;
atom2432 = atom31*atom2398+atom2407*atom43+atom37*atom2402;
atom2427 = atom2387*atom724+atom721*atom2377+atom2371*atom718;
atom2703 = C23R*atom2683*aR*G_elastic*atom2432*bR-C22R*aR*G_elastic*atom2427*bR;
atom2512 = atom31*atom2478+atom37*atom2482+atom2487*atom43;
atom2507 = atom2459*atom849+atom855*atom2467+atom2462*atom852;
atom2559 = atom2539*C23L*G_elastic*bL*aL*atom2512-atom2507*G_elastic*C22L*bL*aL;
atom2706 = -C23R*atom2683*aR*G_elastic*atom2427*bR-atom2696*atom2697*G_elastic*C33R*atom2432;
atom2562 = -atom2507*atom2539*C23L*G_elastic*bL*aL-C33L*atom2552*atom2553*G_elastic*atom2512;
atom2269 = atom153*atom72+atom71*atom150+atom144*atom4;
atom2255 = atom72^2+atom4^2+atom71^2;
atom2271 = atom2255*atom629-atom631*atom2269;
atom2261 = atom71*atom156+atom146*atom4+atom159*atom72;
atom2263 = -atom2255*atom630+atom631*atom2261;
atom2274 = -atom2261*atom629+atom2269*atom630;
atom2337 = atom2261*atom768-atom2255*atom767;
atom2340 = -atom2269*atom768+atom2255*atom766;
atom2343 = -atom2261*atom766+atom767*atom2269;
atom2707 = -(atom2382*atom2274+atom2271*atom2374+atom2263*atom2359)*aR*G_elastic*C11R*bR;
atom2563 = -(atom2374*atom2340+atom2337*atom2359+atom2343*atom2382)*G_elastic*bL*C11L*aL;
atom2447 = atom71*atom2409+atom2432*atom4+atom2415*atom72;
atom2442 = atom2387*atom2274+atom2271*atom2377+atom2263*atom2371;
atom2710 = atom2447*C23R*atom2683*aR*G_elastic*bR-C22R*atom2442*aR*G_elastic*bR;
atom2527 = atom71*atom2489+atom2495*atom72+atom4*atom2512;
atom2522 = atom2343*atom2467+atom2337*atom2459+atom2462*atom2340;
atom2566 = atom2539*C23L*G_elastic*bL*atom2527*aL-G_elastic*C22L*bL*atom2522*aL;
atom2713 = -C23R*atom2683*atom2442*aR*G_elastic*bR-atom2447*atom2696*atom2697*G_elastic*C33R;
atom2569 = -atom2539*C23L*G_elastic*bL*atom2522*aL-C33L*atom2552*atom2553*G_elastic*atom2527;

CK_ = [atom2680+atom2536 , atom400*atom2681+atom511*atom2537 , -atom399*atom2681-atom510*atom2537 , atom2536*atom819+atom2530*atom2537+atom2680*atom688+atom2679*atom2684+atom2535*atom2540+atom2681*atom2674 , atom2540*atom951+atom2536*atom849+atom899*atom2684+atom2533*atom2537+atom2681*atom2677+atom2680*atom718 , -atom2680*atom630+atom2684*atom400-atom767*atom2536+atom2534*atom2537+atom2681*atom2678+atom2540*atom511 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0;
atom2685+atom2541 , atom511*atom2542+atom2686*atom400 , -atom399*atom2686-atom510*atom2542 , atom2535*atom2543+atom2679*atom2687+atom2541*atom819+atom2530*atom2542+atom2686*atom2674+atom2685*atom688 , atom2685*atom718+atom899*atom2687+atom2541*atom849+atom2543*atom951+atom2533*atom2542+atom2686*atom2677 , atom2543*atom511-atom2685*atom630+atom2687*atom400+atom2686*atom2678-atom767*atom2541+atom2534*atom2542 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0;
atom2688+atom2544 , atom2689*atom400+atom511*atom2545 , -atom510*atom2545-atom399*atom2689 , atom2689*atom2674+atom688*atom2688+atom2530*atom2545+atom819*atom2544+atom2679*atom2690+atom2535*atom2546 , atom2533*atom2545+atom2689*atom2677+atom2546*atom951+atom2688*atom718+atom899*atom2690+atom2544*atom849 , atom2690*atom400+atom2689*atom2678-atom767*atom2544+atom2534*atom2545-atom2688*atom630+atom2546*atom511 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0;
atom2691+atom2547 , atom2694*atom400+atom2550*atom511 , -atom510*atom2550-atom2694*atom399 , atom688*atom2691+atom2694*atom2674+atom2550*atom2530+atom2679*atom2699+atom2535*atom2555+atom819*atom2547 , atom2555*atom951+atom849*atom2547+atom2694*atom2677+atom2533*atom2550+atom718*atom2691+atom899*atom2699 , atom2699*atom400+atom2694*atom2678-atom767*atom2547+atom2534*atom2550+atom2555*atom511-atom2691*atom630 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0;
atom2700+atom2556 , atom2559*atom511+atom2703*atom400 , -atom2703*atom399-atom510*atom2559 , atom2559*atom2530+atom688*atom2700+atom2679*atom2706+atom2535*atom2562+atom819*atom2556+atom2703*atom2674 , atom2559*atom2533+atom951*atom2562+atom899*atom2706+atom2556*atom849+atom2700*atom718+atom2703*atom2677 , atom2559*atom2534-atom767*atom2556+atom2706*atom400-atom2700*atom630+atom511*atom2562+atom2703*atom2678 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0;
atom2707+atom2563 , atom511*atom2566+atom2710*atom400 , -atom399*atom2710-atom510*atom2566 , atom819*atom2563+atom2530*atom2566+atom2710*atom2674+atom2679*atom2713+atom2535*atom2569+atom688*atom2707 , atom718*atom2707+atom2710*atom2677+atom2569*atom951+atom899*atom2713+atom849*atom2563+atom2533*atom2566 , -atom2707*atom630+atom2569*atom511+atom2710*atom2678+atom2534*atom2566-atom767*atom2563+atom2713*atom400 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0;
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0;
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0;
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0;
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0;
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0;
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0;
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0;
0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0];

%endfunction
