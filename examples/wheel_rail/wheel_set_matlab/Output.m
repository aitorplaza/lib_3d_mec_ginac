function Output_ = Output(q,qaux,dq,dqaux,ddq,ddqaux,unknowns,time,param,inputs)

x = q( 1 ); 
y = q( 2 ); 
b = q( 3 ); 
c = q( 4 ); 
z = q( 5 ); 
a = q( 6 ); 

thetaW_R = qaux( 1 ); 
uW_R = qaux( 2 ); 
uR_R = qaux( 3 ); 
sR_R = qaux( 4 ); 
thetaW_L = qaux( 5 ); 
uW_L = qaux( 6 ); 
uR_L = qaux( 7 ); 
sR_L = qaux( 8 ); 

dx = dq( 1 ); 
dy = dq( 2 ); 
db = dq( 3 ); 
dc = dq( 4 ); 
dz = dq( 5 ); 
da = dq( 6 ); 

dthetaW_R = dqaux( 1 ); 
duW_R = dqaux( 2 ); 
duR_R = dqaux( 3 ); 
dsR_R = dqaux( 4 ); 
dthetaW_L = dqaux( 5 ); 
duW_L = dqaux( 6 ); 
duR_L = dqaux( 7 ); 
dsR_L = dqaux( 8 ); 

ddx = ddq( 1 ); 
ddy = ddq( 2 ); 
ddb = ddq( 3 ); 
ddc = ddq( 4 ); 
ddz = ddq( 5 ); 
dda = ddq( 6 ); 

ddthetaW_R = ddqaux( 1 ); 
dduW_R = ddqaux( 2 ); 
dduR_R = ddqaux( 3 ); 
ddsR_R = ddqaux( 4 ); 
ddthetaW_L = ddqaux( 5 ); 
dduW_L = ddqaux( 6 ); 
dduR_L = ddqaux( 7 ); 
ddsR_L = ddqaux( 8 ); 

lambda1 = unknowns( 1 ); 
lambda2 = unknowns( 2 ); 
lambda3 = unknowns( 3 ); 
lambda4 = unknowns( 4 ); 
lambda5 = unknowns( 5 ); 
lambda6 = unknowns( 6 ); 
lambda7 = unknowns( 7 ); 
lambda8 = unknowns( 8 ); 
lambda9 = unknowns( 9 ); 
lambda10 = unknowns( 10 ); 

t= time ;

g = param( 1 ); 
a_pend = param( 2 ); 
b_pend = param( 3 ); 
L_R = param( 4 ); 
L_WHS = param( 5 ); 
a_rail = param( 6 ); 
mWHS = param( 7 ); 
I_WHSx = param( 8 ); 
I_WHSy = param( 9 ); 
I_WHSz = param( 10 ); 
tor = param( 11 ); 
as = param( 12 ); 
bs = param( 13 ); 
cs = param( 14 ); 
ds = param( 15 ); 
es = param( 16 ); 
fs = param( 17 ); 
stas = param( 18 ); 
ends = param( 19 ); 
aW_R = param( 20 ); 
bW_R = param( 21 ); 
cW_R = param( 22 ); 
dW_R = param( 23 ); 
lW_R = param( 24 ); 
aR_R = param( 25 ); 
bR_R = param( 26 ); 
cR_R = param( 27 ); 
dR_R = param( 28 ); 
lR_R = param( 29 ); 
aW_L = param( 30 ); 
bW_L = param( 31 ); 
cW_L = param( 32 ); 
dW_L = param( 33 ); 
lW_L = param( 34 ); 
aR_L = param( 35 ); 
bR_L = param( 36 ); 
cR_L = param( 37 ); 
dR_L = param( 38 ); 
lR_L = param( 39 ); 
E_elastic = param( 40 ); 
nu_poisson = param( 41 ); 
G_elastic = param( 42 ); 
aR = param( 43 ); 
bR = param( 44 ); 
aL = param( 45 ); 
bL = param( 46 ); 
C11R = param( 47 ); 
C22R = param( 48 ); 
C23R = param( 49 ); 
C33R = param( 50 ); 
C11L = param( 51 ); 
C22L = param( 52 ); 
C23L = param( 53 ); 
C33L = param( 54 ); 
y0 = param( 55 ); 
b0 = param( 56 ); 

Fx_R = inputs( 1 ); 
Fy_R = inputs( 2 ); 
Mz_R = inputs( 3 ); 
Fx_L = inputs( 4 ); 
Fy_L = inputs( 5 ); 
Mz_L = inputs( 6 ); 

atom3 = cos(a);
atom5 = cos(c);
atom66 = atom3*db;
atom6 = sin(c);
atom4 = sin(a);
atom307 = -(0.5)*L_WHS;
atom321 = atom4*atom307;
atom308 = lW_R-uW_R;
atom314 = dW_R+((bW_R-atom308*aW_R)*atom308-cW_R)*atom308;
atom318 = atom314*cos(thetaW_R);
atom337 = atom318*atom3+atom4*uW_R;
atom781 = da*atom6+atom5*atom66;
atom775 = atom321+atom337;
atom147 = -atom4*atom5;
atom146 = atom5*atom3;
atom316 = -sin(thetaW_R)*atom314;
atom320 = atom307*atom146;
atom774 = atom146*uW_R+atom147*atom318+atom316*atom6+atom320;
atom68 = atom4*db+dc;
atom381 = (ends-stas)^(-1);
atom382 = (sR_R-stas)*atom381;
atom384 = bs+atom382*as;
atom386 = atom382*atom384+cs;
atom388 = ds+atom382*atom386;
atom393 = atom381*as;
atom396 = atom384*atom381+atom382*atom393;
atom399 = atom382*atom396+atom386*atom381;
atom402 = atom382*atom399+atom381*atom388;
atom405 = atom382*atom402+atom381*(atom382*atom388+es);
atom407 = 1+atom405^2;
atom408 = sqrt(atom407);
atom418 = 2*atom393*atom381;
atom416 = atom396*atom381;
atom415 = atom381*atom399;
atom426 = atom381*atom402;
atom428 = atom382*(2*atom415+atom382*(atom418*atom382+2*atom416))+2*atom426;
atom433 = -atom408^(-2)*atom405*atom407^(-1/2)*atom428;
atom437 = 1+(0.5)*L_R*atom408^(-1)*atom428+(0.5)*L_R*atom433*atom405;
atom439 = atom405-(0.5)*L_R*atom433;
atom448 = atom437^2;
atom456 = (atom439^2+atom448)^(-1/2);
atom778 = atom5*da-atom6*atom66;
atom144 = -atom6*atom3;
atom319 = atom144*atom307;
atom145 = atom4*atom6;
atom773 = atom319+atom318*atom145+atom5*atom316+atom144*uW_R;
atom792 = dy+atom773*atom68-atom778*atom775;
atom372 = uR_R-lR_R;
atom373 = aR_R*atom372;
atom374 = bR_R+atom373;
atom440 = atom374+atom373;
atom442 = atom374*atom372+cR_R+atom440*atom372;
atom461 = (1+atom442^2)^(-1/2);
atom444 = -atom437*atom442;
atom443 = atom442*atom439;
atom450 = (atom444^2+atom443^2+atom448)^(-1/2);
atom453 = atom437*atom450;
atom452 = atom450*atom444;
atom451 = atom443*atom450;
atom1098 = -atom4*atom318+uW_R*atom3;
atom1070 = atom307*atom3;
atom1075 = atom1070*da;
atom1074 = -atom321*da;
atom1073 = atom321*atom66-atom1070*atom68;
atom1078 = atom5*atom1073-atom6*atom1074;
atom1081 = atom1073*atom6+atom5*atom1074;
atom565 = atom381*(sR_L-stas);
atom567 = bs+atom565*as;
atom569 = atom565*atom567+cs;
atom571 = atom569*atom565+ds;
atom578 = atom567*atom381+atom565*atom393;
atom581 = atom565*atom578+atom569*atom381;
atom584 = atom581*atom565+atom571*atom381;
atom587 = atom565*atom584+(es+atom565*atom571)*atom381;
atom589 = 1+atom587^2;
atom599 = atom578*atom381;
atom598 = atom581*atom381;
atom597 = atom381*atom584;
atom608 = 2*atom597+atom565*(atom565*(atom418*atom565+2*atom599)+2*atom598);
atom590 = sqrt(atom589);
atom613 = -atom590^(-2)*atom587*atom589^(-1/2)*atom608;
atom617 = 1-(0.5)*L_R*atom590^(-1)*atom608-(0.5)*L_R*atom613*atom587;
atom619 = atom587+(0.5)*L_R*atom613;
atom628 = atom617^2;
atom636 = (atom619^2+atom628)^(-1/2);
atom495 = uW_L-lW_L;
atom501 = dW_L+(cW_L+(atom495*aW_L+bW_L)*atom495)*atom495;
atom505 = atom501*cos(thetaW_L);
atom521 = atom505*atom3+atom4*uW_L;
atom918 = atom521-atom321;
atom503 = -sin(thetaW_L)*atom501;
atom916 = -atom319+atom144*uW_L+atom505*atom145+atom503*atom5;
atom929 = dy+atom916*atom68-atom778*atom918;
atom917 = atom147*atom505+atom503*atom6+atom146*uW_L-atom320;
atom557 = uR_L-lR_L;
atom558 = aR_L*atom557;
atom559 = atom558+bR_L;
atom620 = atom558+atom559;
atom622 = cR_L+atom620*atom557+atom557*atom559;
atom641 = (1+atom622^2)^(-1/2);
atom624 = -atom622*atom617;
atom623 = atom622*atom619;
atom630 = (atom628+atom624^2+atom623^2)^(-1/2);
atom631 = atom630*atom623;
atom632 = atom630*atom624;
atom633 = atom630*atom617;
atom1137 = -atom4*atom505+uW_L*atom3;

Output_ = [sqrt(lambda1^2);
atom456*(dx-atom774*atom68+atom781*atom775)*atom437+atom792*atom456*atom439;
atom461*(atom778*atom774-atom781*atom773+dz)*atom442+atom461*atom792;
atom451*atom778+atom453*atom68+atom781*atom452;
db;
1/2*sqrt((dz+atom1075)^2+(dy+atom1081)^2+(dx+atom1078)^2)+1/2*sqrt((atom337*da-atom316*atom68)^2+(da*atom1098-atom316*atom66)^2+(atom1098*atom68-atom337*atom66)^2);
abs(sqrt(atom318^2+atom316^2))*sqrt(1-atom451*atom144-atom4*atom453-atom146*atom452);
10000.0;
6000000.0;
abs(2*atom440+2*aR_R*atom372)^(-1)*abs((1+atom442^(2.0))^(1.5));
sqrt(lambda2^2);
atom929*atom619*atom636+(dx+atom781*atom918-atom917*atom68)*atom636*atom617;
atom929*atom641-(atom781*atom916-atom778*atom917-dz)*atom622*atom641;
atom631*atom778+atom633*atom68+atom781*atom632;
db;
1/2*sqrt((atom521*da-atom503*atom68)^2+(atom521*atom66-atom1137*atom68)^2+(atom1137*da-atom503*atom66)^2)+1/2*sqrt((dx-atom1078)^2+(dz-atom1075)^2+(dy-atom1081)^2);
abs(sqrt(atom503^2+atom505^2))*sqrt(1-atom631*atom144-atom4*atom633-atom146*atom632);
10000.0;
6000000.0;
abs((1+atom622^(2.0))^(1.5))*abs(2*atom620+2*aR_L*atom557)^(-1)];

%endfunction
