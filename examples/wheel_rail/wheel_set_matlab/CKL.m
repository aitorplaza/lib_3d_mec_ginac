function CKL_ = CKL(q,qaux,dq,time,param)

x = q( 1 ); 
y = q( 2 ); 
b = q( 3 ); 
c = q( 4 ); 
z = q( 5 ); 
a = q( 6 ); 

thetaW_R = qaux( 1 ); 
uW_R = qaux( 2 ); 
uR_R = qaux( 3 ); 
sR_R = qaux( 4 ); 
thetaW_L = qaux( 5 ); 
uW_L = qaux( 6 ); 
uR_L = qaux( 7 ); 
sR_L = qaux( 8 ); 

dx = dq( 1 ); 
dy = dq( 2 ); 
db = dq( 3 ); 
dc = dq( 4 ); 
dz = dq( 5 ); 
da = dq( 6 ); 

t= time ;

g = param( 1 ); 
a_pend = param( 2 ); 
b_pend = param( 3 ); 
L_R = param( 4 ); 
L_WHS = param( 5 ); 
a_rail = param( 6 ); 
mWHS = param( 7 ); 
I_WHSx = param( 8 ); 
I_WHSy = param( 9 ); 
I_WHSz = param( 10 ); 
tor = param( 11 ); 
as = param( 12 ); 
bs = param( 13 ); 
cs = param( 14 ); 
ds = param( 15 ); 
es = param( 16 ); 
fs = param( 17 ); 
stas = param( 18 ); 
ends = param( 19 ); 
aW_R = param( 20 ); 
bW_R = param( 21 ); 
cW_R = param( 22 ); 
dW_R = param( 23 ); 
lW_R = param( 24 ); 
aR_R = param( 25 ); 
bR_R = param( 26 ); 
cR_R = param( 27 ); 
dR_R = param( 28 ); 
lR_R = param( 29 ); 
aW_L = param( 30 ); 
bW_L = param( 31 ); 
cW_L = param( 32 ); 
dW_L = param( 33 ); 
lW_L = param( 34 ); 
aR_L = param( 35 ); 
bR_L = param( 36 ); 
cR_L = param( 37 ); 
dR_L = param( 38 ); 
lR_L = param( 39 ); 
E_elastic = param( 40 ); 
nu_poisson = param( 41 ); 
G_elastic = param( 42 ); 
aR = param( 43 ); 
bR = param( 44 ); 
aL = param( 45 ); 
bL = param( 46 ); 
C11R = param( 47 ); 
C22R = param( 48 ); 
C23R = param( 49 ); 
C33R = param( 50 ); 
C11L = param( 51 ); 
C22L = param( 52 ); 
C23L = param( 53 ); 
C33L = param( 54 ); 
y0 = param( 55 ); 
b0 = param( 56 ); 

atom381 = (ends-stas)^(-1);
atom565 = atom381*(sR_L-stas);
atom567 = bs+atom565*as;
atom569 = atom565*atom567+cs;
atom571 = atom569*atom565+ds;
atom393 = atom381*as;
atom578 = atom567*atom381+atom565*atom393;
atom581 = atom565*atom578+atom569*atom381;
atom584 = atom581*atom565+atom571*atom381;
atom587 = atom565*atom584+(es+atom565*atom571)*atom381;
atom589 = 1+atom587^2;
atom599 = atom578*atom381;
atom598 = atom581*atom381;
atom597 = atom381*atom584;
atom608 = 2*atom565*(atom598+atom565*(atom599+atom565*atom393*atom381))+2*atom597;
atom590 = sqrt(atom589);
atom613 = -atom590^(-2)*atom587*atom589^(-1/2)*atom608;
atom617 = 1-(0.5)*L_R*atom590^(-1)*atom608-(0.5)*L_R*atom613*atom587;
atom619 = atom587+(0.5)*L_R*atom613;
atom628 = atom617^2;
atom636 = (atom619^2+atom628)^(-1/2);
atom8 = sin(b_pend);
atom9 = cos(a_pend);
atom637 = atom636*atom617;
atom13 = -atom8*atom9;
atom638 = atom619*atom636;
atom10 = sin(a_pend);
atom4238 = atom638*atom10+atom637*atom13;
atom7 = cos(b_pend);
atom4240 = atom7*atom637;
atom11 = atom8*atom10;
atom4244 = atom637*atom11+atom638*atom9;
atom4247 = atom4244*atom11+atom7*atom4240+atom4238*atom13;
atom4534 = -C11L*aL*G_elastic*atom4247*bL;
atom557 = uR_L-lR_L;
atom558 = aR_L*atom557;
atom559 = atom558+bR_L;
atom622 = cR_L+atom557*(atom558+atom559)+atom557*atom559;
atom641 = (1+atom622^2)^(-1/2);
atom642 = atom622*atom641;
atom14 = atom7*atom9;
atom4250 = atom642*atom14+atom641*atom10;
atom4252 = atom642*atom8;
atom12 = -atom7*atom10;
atom4256 = atom9*atom641+atom642*atom12;
atom4259 = atom11*atom4256+atom4250*atom13+atom7*atom4252;
atom4535 = -aL*G_elastic*C22L*atom4259*bL;
atom5 = cos(c);
atom3 = cos(a);
atom4 = sin(a);
atom307 = -(0.5)*L_WHS;
atom495 = uW_L-lW_L;
atom501 = dW_L+(cW_L+(atom495*aW_L+bW_L)*atom495)*atom495;
atom505 = atom501*cos(thetaW_L);
atom146 = atom5*atom3;
atom918 = atom505*atom3+atom4*uW_L-atom4*atom307;
atom147 = -atom4*atom5;
atom503 = -sin(thetaW_L)*atom501;
atom6 = sin(c);
atom917 = -atom307*atom146+atom147*atom505+atom503*atom6+atom146*uW_L;
atom972 = atom146*atom918-atom4*atom917;
atom145 = atom4*atom6;
atom144 = -atom6*atom3;
atom916 = atom144*uW_L+atom505*atom145-atom144*atom307+atom503*atom5;
atom975 = -atom144*atom918+atom4*atom916;
atom4517 = atom638*atom975+atom972*atom637;
atom978 = -atom916*atom146+atom144*atom917;
atom4526 = atom975*atom641+atom642*atom978;
atom624 = -atom622*atom617;
atom623 = atom622*atom619;
atom630 = (atom628+atom624^2+atom623^2)^(-1/2);
atom633 = atom630*atom617;
atom632 = atom630*atom624;
atom631 = atom630*atom623;
atom4537 = sqrt(aL*bL);
atom1112 = atom631*atom144+atom4*atom633+atom146*atom632;
atom4538 = -C23L*atom4537*aL*G_elastic*atom4259*bL;
atom4520 = -atom637*atom917+atom638*atom916;
atom4527 = atom916*atom641;
atom4533 = atom631*atom5+atom632*atom6;
atom1025 = -atom5*atom918;
atom4530 = atom642*(atom5*atom917-atom916*atom6)+atom1025*atom641;
atom4523 = atom637*atom6*atom918+atom638*atom1025;
atom4262 = atom9*atom4244+atom4238*atom10;
atom4539 = -C11L*atom4262*aL*G_elastic*bL;
atom4265 = atom9*atom4256+atom4250*atom10;
atom4540 = -atom4265*aL*G_elastic*C22L*bL;
atom4541 = -C23L*atom4265*atom4537*aL*G_elastic*bL;
atom4270 = atom8*atom4240+atom4238*atom14+atom12*atom4244;
atom4542 = -C11L*aL*G_elastic*bL*(atom4270*atom978+atom4262*atom975+atom972*atom4247);
atom4280 = atom8*atom4252+atom14*atom4250+atom12*atom4256;
atom4285 = atom4265*atom975+atom978*atom4280+atom972*atom4259;
atom22 = atom5*atom9-atom6*atom11;
atom4294 = atom633*atom12+atom9*atom632+atom631*atom11;
atom16 = -atom7*atom6;
atom4288 = atom631*atom7+atom633*atom8;
atom28 = atom5*atom10-atom13*atom6;
atom4301 = atom631*atom13+atom632*atom10+atom633*atom14;
atom4303 = (atom28*atom3+atom4*atom14)*atom4301+(atom16*atom3+atom4*atom8)*atom4288+atom4294*(atom4*atom12+atom22*atom3);
atom4545 = C23L*atom4303*atom4537*aL*G_elastic*bL-aL*atom4285*G_elastic*C22L*bL;
atom4547 = aL^2;
atom4548 = bL^2;
atom4550 = -atom4547*atom4303*C33L*atom4548*G_elastic-C23L*atom4537*aL*atom4285*G_elastic*bL;
atom2 = sin(b);
atom71 = -atom2*atom3;
atom1 = cos(b);
atom72 = atom1*atom3;
atom4010 = atom71^2+atom4^2+atom72^2;
atom150 = atom5*atom1-atom2*atom145;
atom153 = atom1*atom145+atom5*atom2;
atom4018 = atom71*atom150+atom72*atom153+atom144*atom4;
atom4098 = atom916*atom4010-atom4018*atom918;
atom159 = atom147*atom1+atom2*atom6;
atom156 = atom1*atom6-atom147*atom2;
atom4004 = atom71*atom156+atom72*atom159+atom4*atom146;
atom4095 = -atom4010*atom917+atom4004*atom918;
atom4101 = -atom4004*atom916+atom4018*atom917;
atom4551 = -(atom4262*atom4098+atom4247*atom4095+atom4270*atom4101)*C11L*aL*G_elastic*bL;
atom4313 = atom4259*atom4095+atom4101*atom4280+atom4265*atom4098;
atom25 = atom10*atom6+atom5*atom13;
atom46 = -atom4*atom28+atom14*atom3;
atom19 = atom9*atom6+atom5*atom11;
atom40 = atom12*atom3-atom4*atom22;
atom34 = -atom4*atom16+atom8*atom3;
atom15 = atom7*atom5;
atom4325 = -atom4288*(atom34*atom2-atom1*atom15)-(atom46*atom2-atom1*atom25)*atom4301+(atom1*atom19-atom40*atom2)*atom4294;
atom4318 = (atom40*atom1+atom2*atom19)*atom4294+atom4288*(atom2*atom15+atom34*atom1)+(atom25*atom2+atom46*atom1)*atom4301;
atom4328 = atom4*atom4303+atom4325*atom71+atom72*atom4318;
atom4554 = C23L*atom4537*aL*G_elastic*atom4328*bL-aL*G_elastic*C22L*bL*atom4313;
atom4557 = -C23L*atom4537*aL*G_elastic*bL*atom4313-atom4547*C33L*atom4548*G_elastic*atom4328;
atom4558 = -atom4270*C11L*aL*G_elastic*bL;
atom4559 = -aL*G_elastic*atom4280*C22L*bL;
atom4560 = -C23L*atom4537*aL*G_elastic*atom4280*bL;
atom4034 = atom2*atom159+atom156*atom1;
atom4044 = atom1*atom150+atom153*atom2;
atom4118 = atom4044*atom917-atom916*atom4034;
atom4038 = atom71*atom1+atom72*atom2;
atom4115 = -atom4044*atom918+atom4038*atom916;
atom4112 = atom4034*atom918-atom4038*atom917;
atom4561 = -(atom4262*atom4115+atom4270*atom4118+atom4112*atom4247)*C11L*aL*G_elastic*bL;
atom4341 = atom4325*atom1+atom2*atom4318;
atom4338 = atom4118*atom4280+atom4265*atom4115+atom4112*atom4259;
atom4564 = -atom4338*aL*G_elastic*C22L*bL+C23L*atom4341*atom4537*aL*G_elastic*bL;
atom4567 = -atom4547*C33L*atom4341*atom4548*G_elastic-C23L*atom4537*atom4338*aL*G_elastic*bL;

CKL_ = [atom4534*atom637 , atom641*atom4535+atom638*atom4534 , atom4534*atom4517+atom4526*atom4535+atom1112*atom4538 , atom633*atom4538+atom4534*atom4520+atom4535*atom4527 , atom642*atom4535 , atom4534*atom4523+atom4533*atom4538+atom4530*atom4535;
atom4539*atom637 , atom641*atom4540+atom4539*atom638 , atom4526*atom4540+atom4539*atom4517+atom4541*atom1112 , atom4540*atom4527+atom633*atom4541+atom4539*atom4520 , atom642*atom4540 , atom4539*atom4523+atom4533*atom4541+atom4530*atom4540;
atom637*atom4542 , atom4545*atom641+atom638*atom4542 , atom4517*atom4542+atom1112*atom4550+atom4526*atom4545 , atom4545*atom4527+atom4520*atom4542+atom633*atom4550 , atom642*atom4545 , atom4545*atom4530+atom4523*atom4542+atom4533*atom4550;
atom4551*atom637 , atom4554*atom641+atom638*atom4551 , atom4557*atom1112+atom4554*atom4526+atom4551*atom4517 , atom633*atom4557+atom4551*atom4520+atom4554*atom4527 , atom4554*atom642 , atom4554*atom4530+atom4533*atom4557+atom4551*atom4523;
atom4558*atom637 , atom641*atom4559+atom638*atom4558 , atom4560*atom1112+atom4526*atom4559+atom4558*atom4517 , atom633*atom4560+atom4527*atom4559+atom4558*atom4520 , atom642*atom4559 , atom4533*atom4560+atom4558*atom4523+atom4530*atom4559;
atom4561*atom637 , atom638*atom4561+atom641*atom4564 , atom4567*atom1112+atom4561*atom4517+atom4526*atom4564 , atom4564*atom4527+atom633*atom4567+atom4561*atom4520 , atom642*atom4564 , atom4561*atom4523+atom4530*atom4564+atom4567*atom4533];

%endfunction
