function Q_ = Q(q,qaux,dq,dqaux,time,param,inputs)

x = q( 1 ); 
y = q( 2 ); 
b = q( 3 ); 
c = q( 4 ); 
z = q( 5 ); 
a = q( 6 ); 

thetaW_R = qaux( 1 ); 
uW_R = qaux( 2 ); 
uR_R = qaux( 3 ); 
sR_R = qaux( 4 ); 
thetaW_L = qaux( 5 ); 
uW_L = qaux( 6 ); 
uR_L = qaux( 7 ); 
sR_L = qaux( 8 ); 

dx = dq( 1 ); 
dy = dq( 2 ); 
db = dq( 3 ); 
dc = dq( 4 ); 
dz = dq( 5 ); 
da = dq( 6 ); 

dthetaW_R = dqaux( 1 ); 
duW_R = dqaux( 2 ); 
duR_R = dqaux( 3 ); 
dsR_R = dqaux( 4 ); 
dthetaW_L = dqaux( 5 ); 
duW_L = dqaux( 6 ); 
duR_L = dqaux( 7 ); 
dsR_L = dqaux( 8 ); 

t= time ;

g = param( 1 ); 
a_pend = param( 2 ); 
b_pend = param( 3 ); 
L_R = param( 4 ); 
L_WHS = param( 5 ); 
a_rail = param( 6 ); 
mWHS = param( 7 ); 
I_WHSx = param( 8 ); 
I_WHSy = param( 9 ); 
I_WHSz = param( 10 ); 
tor = param( 11 ); 
as = param( 12 ); 
bs = param( 13 ); 
cs = param( 14 ); 
ds = param( 15 ); 
es = param( 16 ); 
fs = param( 17 ); 
stas = param( 18 ); 
ends = param( 19 ); 
aW_R = param( 20 ); 
bW_R = param( 21 ); 
cW_R = param( 22 ); 
dW_R = param( 23 ); 
lW_R = param( 24 ); 
aR_R = param( 25 ); 
bR_R = param( 26 ); 
cR_R = param( 27 ); 
dR_R = param( 28 ); 
lR_R = param( 29 ); 
aW_L = param( 30 ); 
bW_L = param( 31 ); 
cW_L = param( 32 ); 
dW_L = param( 33 ); 
lW_L = param( 34 ); 
aR_L = param( 35 ); 
bR_L = param( 36 ); 
cR_L = param( 37 ); 
dR_L = param( 38 ); 
lR_L = param( 39 ); 
E_elastic = param( 40 ); 
nu_poisson = param( 41 ); 
G_elastic = param( 42 ); 
aR = param( 43 ); 
bR = param( 44 ); 
aL = param( 45 ); 
bL = param( 46 ); 
C11R = param( 47 ); 
C22R = param( 48 ); 
C23R = param( 49 ); 
C33R = param( 50 ); 
C11L = param( 51 ); 
C22L = param( 52 ); 
C23L = param( 53 ); 
C33L = param( 54 ); 
y0 = param( 55 ); 
b0 = param( 56 ); 

Fx_R = inputs( 1 ); 
Fy_R = inputs( 2 ); 
Mz_R = inputs( 3 ); 
Fx_L = inputs( 4 ); 
Fy_L = inputs( 5 ); 
Mz_L = inputs( 6 ); 

atom557 = uR_L-lR_L;
atom558 = aR_L*atom557;
atom559 = atom558+bR_L;
atom622 = cR_L+atom557*(atom558+atom559)+atom557*atom559;
atom641 = (1+atom622^2)^(-1/2);
atom7 = cos(b_pend);
atom9 = cos(a_pend);
atom647 = Fy_L*atom622*atom641;
atom14 = atom7*atom9;
atom8 = sin(b_pend);
atom381 = (ends-stas)^(-1);
atom565 = atom381*(sR_L-stas);
atom567 = bs+atom565*as;
atom569 = atom565*atom567+cs;
atom571 = atom569*atom565+ds;
atom393 = atom381*as;
atom578 = atom567*atom381+atom565*atom393;
atom581 = atom565*atom578+atom569*atom381;
atom584 = atom581*atom565+atom571*atom381;
atom587 = atom565*atom584+(es+atom565*atom571)*atom381;
atom589 = 1+atom587^2;
atom418 = 2*atom393*atom381;
atom599 = atom578*atom381;
atom598 = atom581*atom381;
atom597 = atom381*atom584;
atom608 = 2*atom597+atom565*(atom565*(atom418*atom565+2*atom599)+2*atom598);
atom590 = sqrt(atom589);
atom613 = -atom590^(-2)*atom587*atom589^(-1/2)*atom608;
atom617 = 1-(0.5)*L_R*atom590^(-1)*atom608-(0.5)*L_R*atom613*atom587;
atom619 = atom587+(0.5)*L_R*atom613;
atom628 = atom617^2;
atom636 = (atom619^2+atom628)^(-1/2);
atom13 = -atom8*atom9;
atom648 = atom636*Fx_L*atom617;
atom10 = sin(a_pend);
atom650 = Fy_L*atom641+atom619*atom636*Fx_L;
atom956 = atom10*atom650+atom647*atom14+atom13*atom648;
atom946 = atom647*atom8+atom7*atom648;
atom12 = -atom7*atom10;
atom11 = atom8*atom10;
atom951 = atom9*atom650+atom648*atom11+atom647*atom12;
atom372 = uR_R-lR_R;
atom373 = aR_R*atom372;
atom374 = bR_R+atom373;
atom442 = atom374*atom372+(atom374+atom373)*atom372+cR_R;
atom461 = (1+atom442^2)^(-1/2);
atom467 = atom461*Fy_R*atom442;
atom382 = (sR_R-stas)*atom381;
atom384 = bs+atom382*as;
atom386 = atom382*atom384+cs;
atom388 = ds+atom382*atom386;
atom396 = atom384*atom381+atom382*atom393;
atom399 = atom382*atom396+atom386*atom381;
atom402 = atom382*atom399+atom381*atom388;
atom405 = atom382*atom402+atom381*(atom382*atom388+es);
atom407 = 1+atom405^2;
atom408 = sqrt(atom407);
atom416 = atom396*atom381;
atom415 = atom381*atom399;
atom426 = atom381*atom402;
atom428 = atom382*(2*atom415+atom382*(atom418*atom382+2*atom416))+2*atom426;
atom433 = -atom408^(-2)*atom405*atom407^(-1/2)*atom428;
atom437 = 1+(0.5)*L_R*atom408^(-1)*atom428+(0.5)*L_R*atom433*atom405;
atom439 = atom405-(0.5)*L_R*atom433;
atom448 = atom437^2;
atom456 = (atom439^2+atom448)^(-1/2);
atom470 = Fx_R*atom456*atom439+atom461*Fy_R;
atom468 = Fx_R*atom456*atom437;
atom819 = atom10*atom470+atom467*atom14+atom13*atom468;
atom814 = atom9*atom470+atom468*atom11+atom467*atom12;
atom809 = atom8*atom467+atom7*atom468;
atom65 = -mWHS*g;
atom824 = atom819*atom13+atom7*atom809+atom814*atom11;
atom961 = atom956*atom13+atom951*atom11+atom7*atom946;
atom827 = atom819*atom10+atom814*atom9;
atom964 = atom956*atom10+atom9*atom951;
atom6 = sin(c);
atom3 = cos(a);
atom5 = cos(c);
atom307 = -(0.5)*L_WHS;
atom146 = atom5*atom3;
atom320 = atom307*atom146;
atom4 = sin(a);
atom495 = uW_L-lW_L;
atom501 = dW_L+(cW_L+(atom495*aW_L+bW_L)*atom495)*atom495;
atom147 = -atom4*atom5;
atom505 = atom501*cos(thetaW_L);
atom503 = -sin(thetaW_L)*atom501;
atom144 = -atom6*atom3;
atom917 = atom147*atom505+atom503*atom6+atom146*uW_L-atom320;
atom145 = atom4*atom6;
atom319 = atom144*atom307;
atom916 = -atom319+atom144*uW_L+atom505*atom145+atom503*atom5;
atom1018 = atom12*atom951+atom14*atom956+atom8*atom946;
atom321 = atom4*atom307;
atom918 = atom505*atom3+atom4*uW_L-atom321;
atom624 = -atom622*atom617;
atom623 = atom622*atom619;
atom630 = (atom628+atom624^2+atom623^2)^(-1/2);
atom653 = atom630*Mz_L*atom617;
atom651 = atom630*Mz_L*atom623;
atom16 = -atom7*atom6;
atom933 = atom7*atom651+atom8*atom653;
atom31 = atom16*atom3+atom4*atom8;
atom652 = atom630*Mz_L*atom624;
atom22 = atom5*atom9-atom6*atom11;
atom938 = atom12*atom653+atom652*atom9+atom651*atom11;
atom37 = atom4*atom12+atom22*atom3;
atom28 = atom5*atom10-atom13*atom6;
atom943 = atom651*atom13+atom652*atom10+atom14*atom653;
atom43 = atom28*atom3+atom4*atom14;
atom308 = lW_R-uW_R;
atom314 = dW_R+((bW_R-atom308*aW_R)*atom308-cW_R)*atom308;
atom318 = atom314*cos(thetaW_R);
atom316 = -sin(thetaW_R)*atom314;
atom774 = atom146*uW_R+atom147*atom318+atom316*atom6+atom320;
atom773 = atom319+atom318*atom145+atom5*atom316+atom144*uW_R;
atom881 = atom814*atom12+atom8*atom809+atom819*atom14;
atom775 = atom318*atom3+atom321+atom4*uW_R;
atom2 = sin(b);
atom1 = cos(b);
atom3786 = atom3*dc;
atom3792 = atom1*atom3786+atom2*da;
atom3789 = atom1*da-atom2*atom3786;
atom753 = tor*atom37;
atom752 = atom31*tor;
atom754 = tor*atom43;
atom3907 = atom3792*atom3789*I_WHSx-I_WHSz*atom3792*atom3789+I_WHSy*atom3786*da;
atom759 = atom43*atom754+atom31*atom752+atom753*atom37;
atom444 = -atom437*atom442;
atom443 = atom442*atom439;
atom450 = (atom444^2+atom443^2+atom448)^(-1/2);
atom473 = atom437*atom450*Mz_R;
atom471 = atom443*atom450*Mz_R;
atom796 = atom7*atom471+atom8*atom473;
atom472 = atom450*Mz_R*atom444;
atom801 = atom12*atom473+atom472*atom9+atom471*atom11;
atom806 = atom471*atom13+atom472*atom10+atom14*atom473;
atom832 = atom806*atom43+atom801*atom37+atom31*atom796;
atom969 = atom933*atom31+atom943*atom43+atom938*atom37;
atom72 = atom1*atom3;
atom159 = atom147*atom1+atom2*atom6;
atom71 = -atom2*atom3;
atom156 = atom1*atom6-atom147*atom2;
atom4004 = atom71*atom156+atom72*atom159+atom4*atom146;
atom150 = atom5*atom1-atom2*atom145;
atom153 = atom1*atom145+atom5*atom2;
atom4018 = atom71*atom150+atom72*atom153+atom144*atom4;
atom4010 = atom71^2+atom4^2+atom72^2;
atom34 = -atom4*atom16+atom8*atom3;
atom15 = atom7*atom5;
atom52 = atom2*atom15+atom34*atom1;
atom40 = atom12*atom3-atom4*atom22;
atom19 = atom9*atom6+atom5*atom11;
atom58 = atom40*atom1+atom2*atom19;
atom25 = atom10*atom6+atom5*atom13;
atom46 = -atom4*atom28+atom14*atom3;
atom64 = atom25*atom2+atom46*atom1;
atom4082 = atom938*atom58+atom933*atom52+atom943*atom64;
atom49 = -atom34*atom2+atom1*atom15;
atom55 = atom1*atom19-atom40*atom2;
atom61 = -atom46*atom2+atom1*atom25;
atom4077 = atom49*atom933+atom943*atom61+atom938*atom55;
atom3984 = atom61*atom806+atom49*atom796+atom801*atom55;
atom3989 = atom796*atom52+atom64*atom806+atom58*atom801;
atom3936 = atom49*atom752+atom753*atom55+atom61*atom754;
atom3941 = atom752*atom52+atom64*atom754+atom753*atom58;
atom3785 = atom4*dc;
atom3793 = atom3785+db;
atom3908 = atom3793*I_WHSy*atom3789+I_WHSz*(atom3789*db-atom3785*atom1*da)-atom3793*atom3789*I_WHSx;
atom3906 = -(atom3792*db-atom3785*atom2*da)*I_WHSx+atom3793*I_WHSz*atom3792-atom3793*I_WHSy*atom3792;
atom4038 = atom71*atom1+atom72*atom2;
atom4044 = atom1*atom150+atom153*atom2;
atom4034 = atom2*atom159+atom156*atom1;

Q_ = [-atom824-atom961-atom65*atom13;
-atom827-atom65*atom10-atom964;
-atom824*(atom146*atom775-atom4*atom774)+atom1018*(atom916*atom146-atom144*atom917)-atom969+atom3907-atom759-atom832+(atom144*atom918-atom4*atom916)*atom964+(atom773*atom146-atom144*atom774)*atom881+atom827*(atom144*atom775-atom4*atom773)-atom961*(atom146*atom918-atom4*atom917);
atom1018*(atom4004*atom916-atom4018*atom917)-atom4*atom969+atom72*atom3908+atom961*(atom4010*atom917-atom4004*atom918)+atom827*(atom4018*atom775-atom773*atom4010)+atom824*(atom774*atom4010-atom4004*atom775)-atom72*atom3941-atom4*atom759-atom72*atom3989-atom4*atom832+atom71*atom3906-atom72*atom4082-(atom916*atom4010-atom4018*atom918)*atom964-atom71*atom3936+atom4*atom3907-atom71*atom4077+(atom4004*atom773-atom4018*atom774)*atom881-atom71*atom3984;
-atom1018-atom881-atom65*atom14;
-atom3941*atom2+(atom773*atom4034-atom774*atom4044)*atom881-atom827*(atom773*atom4038-atom4044*atom775)-atom1*atom3984-atom1*atom4077-atom1018*(atom4044*atom917-atom916*atom4034)-atom1*atom3936+atom3908*atom2-atom961*(atom4034*atom918-atom4038*atom917)+(atom4044*atom918-atom4038*atom916)*atom964-atom3989*atom2-atom824*(atom775*atom4034-atom4038*atom774)+atom1*atom3906-atom4082*atom2];

%endfunction
