function Phi_ = Phi(q,qaux,time,param)

x = q( 1 ); 
y = q( 2 ); 
b = q( 3 ); 
c = q( 4 ); 
z = q( 5 ); 
a = q( 6 ); 

thetaW_R = qaux( 1 ); 
uW_R = qaux( 2 ); 
uR_R = qaux( 3 ); 
sR_R = qaux( 4 ); 
thetaW_L = qaux( 5 ); 
uW_L = qaux( 6 ); 
uR_L = qaux( 7 ); 
sR_L = qaux( 8 ); 

t= time ;

g = param( 1 ); 
a_pend = param( 2 ); 
b_pend = param( 3 ); 
L_R = param( 4 ); 
L_WHS = param( 5 ); 
a_rail = param( 6 ); 
mWHS = param( 7 ); 
I_WHSx = param( 8 ); 
I_WHSy = param( 9 ); 
I_WHSz = param( 10 ); 
tor = param( 11 ); 
as = param( 12 ); 
bs = param( 13 ); 
cs = param( 14 ); 
ds = param( 15 ); 
es = param( 16 ); 
fs = param( 17 ); 
stas = param( 18 ); 
ends = param( 19 ); 
aW_R = param( 20 ); 
bW_R = param( 21 ); 
cW_R = param( 22 ); 
dW_R = param( 23 ); 
lW_R = param( 24 ); 
aR_R = param( 25 ); 
bR_R = param( 26 ); 
cR_R = param( 27 ); 
dR_R = param( 28 ); 
lR_R = param( 29 ); 
aW_L = param( 30 ); 
bW_L = param( 31 ); 
cW_L = param( 32 ); 
dW_L = param( 33 ); 
lW_L = param( 34 ); 
aR_L = param( 35 ); 
bR_L = param( 36 ); 
cR_L = param( 37 ); 
dR_L = param( 38 ); 
lR_L = param( 39 ); 
E_elastic = param( 40 ); 
nu_poisson = param( 41 ); 
G_elastic = param( 42 ); 
aR = param( 43 ); 
bR = param( 44 ); 
aL = param( 45 ); 
bL = param( 46 ); 
C11R = param( 47 ); 
C22R = param( 48 ); 
C23R = param( 49 ); 
C33R = param( 50 ); 
C11L = param( 51 ); 
C22L = param( 52 ); 
C23L = param( 53 ); 
C33L = param( 54 ); 
y0 = param( 55 ); 
b0 = param( 56 ); 

atom6 = sin(c);
atom3 = cos(a);
atom144 = -atom6*atom3;
atom307 = -(0.5)*L_WHS;
atom319 = atom144*atom307;
atom308 = lW_R-uW_R;
atom309 = -atom308*aW_R;
atom310 = bW_R+atom309;
atom312 = cW_R-atom308*atom310;
atom317 = cos(thetaW_R);
atom314 = dW_R-atom312*atom308;
atom4 = sin(a);
atom318 = atom317*atom314;
atom145 = atom4*atom6;
atom315 = sin(thetaW_R);
atom5 = cos(c);
atom316 = -atom315*atom314;
atom381 = (ends-stas)^(-1);
atom382 = (sR_R-stas)*atom381;
atom384 = bs+atom382*as;
atom386 = atom382*atom384+cs;
atom388 = ds+atom382*atom386;
atom393 = atom381*as;
atom396 = atom384*atom381+atom382*atom393;
atom399 = atom382*atom396+atom386*atom381;
atom402 = atom382*atom399+atom381*atom388;
atom390 = atom382*atom388+es;
atom405 = atom382*atom402+atom381*atom390;
atom407 = 1+atom405^2;
atom408 = sqrt(atom407);
atom409 = atom408^(-1);
atom418 = 2*atom393*atom381;
atom416 = atom396*atom381;
atom415 = atom381*atom399;
atom426 = atom381*atom402;
atom428 = atom382*(2*atom415+atom382*(atom418*atom382+2*atom416))+2*atom426;
atom433 = -atom408^(-2)*atom405*atom407^(-1/2)*atom428;
atom437 = 1+(0.5)*L_R*atom433*atom405+(0.5)*L_R*atom428*atom409;
atom439 = atom405-(0.5)*L_R*atom433;
atom448 = atom437^2;
atom456 = (atom439^2+atom448)^(-1/2);
atom463 = -sR_R+atom319+atom318*atom145+atom5*atom316-(0.5)*L_R*atom405*atom409+x+atom144*uW_R;
atom147 = -atom4*atom5;
atom146 = atom5*atom3;
atom320 = atom307*atom146;
atom464 = -atom382*atom390-uR_R+atom146*uW_R+atom147*atom318+(0.5)*L_R*atom409-fs+atom316*atom6+y+atom320;
atom372 = uR_R-lR_R;
atom373 = aR_R*atom372;
atom374 = bR_R+atom373;
atom376 = atom374*atom372+cR_R;
atom442 = atom376+(atom374+atom373)*atom372;
atom461 = (1+atom442^2)^(-1/2);
atom321 = atom4*atom307;
atom465 = -dR_R+atom318*atom3-atom372*atom376+atom321+z+atom4*uW_R;
atom444 = -atom437*atom442;
atom443 = atom442*atom439;
atom450 = (atom444^2+atom443^2+atom448)^(-1/2);
atom453 = atom437*atom450;
atom452 = atom450*atom444;
atom451 = atom443*atom450;
atom350 = atom312-(atom310+atom309)*atom308;
atom351 = atom350*atom317;
atom353 = -atom350*atom315;
atom495 = uW_L-lW_L;
atom504 = cos(thetaW_L);
atom501 = dW_L+(cW_L+(atom495*aW_L+bW_L)*atom495)*atom495;
atom505 = atom504*atom501;
atom502 = sin(thetaW_L);
atom503 = -atom501*atom502;
atom565 = atom381*(sR_L-stas);
atom567 = bs+atom565*as;
atom569 = atom565*atom567+cs;
atom571 = atom569*atom565+ds;
atom573 = es+atom565*atom571;
atom578 = atom567*atom381+atom565*atom393;
atom581 = atom565*atom578+atom569*atom381;
atom584 = atom581*atom565+atom571*atom381;
atom587 = atom573*atom381+atom565*atom584;
atom589 = 1+atom587^2;
atom590 = sqrt(atom589);
atom591 = atom590^(-1);
atom599 = atom578*atom381;
atom598 = atom581*atom381;
atom597 = atom381*atom584;
atom608 = 2*atom597+atom565*(atom565*(atom418*atom565+2*atom599)+2*atom598);
atom613 = -atom590^(-2)*atom587*atom589^(-1/2)*atom608;
atom617 = 1-(0.5)*L_R*atom613*atom587-(0.5)*L_R*atom608*atom591;
atom619 = atom587+(0.5)*L_R*atom613;
atom628 = atom617^2;
atom636 = (atom619^2+atom628)^(-1/2);
atom643 = -atom319+(0.5)*L_R*atom587*atom591+atom144*uW_L-sR_L+atom505*atom145+x+atom503*atom5;
atom644 = -atom565*atom573-uR_L-fs-(0.5)*L_R*atom591+atom147*atom505+y+atom503*atom6+atom146*uW_L-atom320;
atom557 = uR_L-lR_L;
atom558 = aR_L*atom557;
atom559 = atom558+bR_L;
atom561 = cR_L+atom557*atom559;
atom622 = atom561+atom557*(atom558+atom559);
atom641 = (1+atom622^2)^(-1/2);
atom645 = atom505*atom3+atom4*uW_L-atom321+z-dR_L-atom561*atom557;
atom624 = -atom622*atom617;
atom623 = atom622*atom619;
atom630 = (atom628+atom624^2+atom623^2)^(-1/2);
atom633 = atom630*atom617;
atom632 = atom630*atom624;
atom631 = atom630*atom623;
atom535 = cW_L+(atom495*aW_L+bW_L)*atom495+atom495*(2*atom495*aW_L+bW_L);
atom536 = atom504*atom535;
atom538 = -atom535*atom502;

Phi_ = [atom456*atom463*atom437+atom456*atom464*atom439;
atom461*atom465*atom442+atom461*atom464;
atom464*atom452+atom451*atom463+atom453*atom465;
atom453*atom316*atom3-(atom318*atom6-atom147*atom316)*atom452-atom451*(atom5*atom318-atom316*atom145);
(atom146+atom147*atom351+atom353*atom6)*atom452+atom453*(atom4+atom351*atom3)+atom451*(atom144+atom351*atom145+atom353*atom5);
atom644*atom619*atom636+atom643*atom636*atom617;
atom622*atom645*atom641+atom644*atom641;
atom644*atom632+atom631*atom643+atom633*atom645;
atom503*atom633*atom3-(atom505*atom6-atom147*atom503)*atom632+atom631*(atom503*atom145-atom5*atom505);
atom633*(atom4+atom536*atom3)+(atom147*atom536+atom538*atom6+atom146)*atom632+atom631*(atom5*atom538+atom144+atom536*atom145)];

%endfunction
