function CKL_ = CKL(q,qaux,dq,time,param)

x = q( 1 ); 
y = q( 2 ); 
b = q( 3 ); 
c = q( 4 ); 
z = q( 5 ); 
a = q( 6 ); 

thetaW_R = qaux( 1 ); 
uW_R = qaux( 2 ); 
uR_R = qaux( 3 ); 
sR_R = qaux( 4 ); 
thetaW_L = qaux( 5 ); 
uW_L = qaux( 6 ); 
uR_L = qaux( 7 ); 
sR_L = qaux( 8 ); 

dx = dq( 1 ); 
dy = dq( 2 ); 
db = dq( 3 ); 
dc = dq( 4 ); 
dz = dq( 5 ); 
da = dq( 6 ); 

t= time ;

g = param( 1 ); 
a_pend = param( 2 ); 
b_pend = param( 3 ); 
L_R = param( 4 ); 
L_WHS = param( 5 ); 
a_rail = param( 6 ); 
mWHS = param( 7 ); 
I_WHSx = param( 8 ); 
I_WHSy = param( 9 ); 
I_WHSz = param( 10 ); 
tor = param( 11 ); 
asR = param( 12 ); 
bsR = param( 13 ); 
csR = param( 14 ); 
dsR = param( 15 ); 
esR = param( 16 ); 
fsR = param( 17 ); 
stasR = param( 18 ); 
endsR = param( 19 ); 
usRz = param( 20 ); 
aW_R = param( 21 ); 
bW_R = param( 22 ); 
cW_R = param( 23 ); 
dW_R = param( 24 ); 
lW_R = param( 25 ); 
aR_R = param( 26 ); 
bR_R = param( 27 ); 
cR_R = param( 28 ); 
dR_R = param( 29 ); 
lR_R = param( 30 ); 
asL = param( 31 ); 
bsL = param( 32 ); 
csL = param( 33 ); 
dsL = param( 34 ); 
esL = param( 35 ); 
fsL = param( 36 ); 
stasL = param( 37 ); 
endsL = param( 38 ); 
usLz = param( 39 ); 
aW_L = param( 40 ); 
bW_L = param( 41 ); 
cW_L = param( 42 ); 
dW_L = param( 43 ); 
lW_L = param( 44 ); 
aR_L = param( 45 ); 
bR_L = param( 46 ); 
cR_L = param( 47 ); 
dR_L = param( 48 ); 
lR_L = param( 49 ); 
E_elastic = param( 50 ); 
nu_poisson = param( 51 ); 
G_elastic = param( 52 ); 
aR = param( 53 ); 
bR = param( 54 ); 
aL = param( 55 ); 
bL = param( 56 ); 
C11R = param( 57 ); 
C22R = param( 58 ); 
C23R = param( 59 ); 
C33R = param( 60 ); 
C11L = param( 61 ); 
C22L = param( 62 ); 
C23L = param( 63 ); 
C33L = param( 64 ); 
y0 = param( 65 ); 
b0 = param( 66 ); 

atom566 = (endsL-stasL)^(-1);
atom567 = (sR_L-stasL)*atom566;
atom569 = bsL+atom567*asL;
atom571 = atom567*atom569+csL;
atom573 = atom567*atom571+dsL;
atom578 = atom566*asL;
atom581 = atom567*atom578+atom569*atom566;
atom584 = atom571*atom566+atom581*atom567;
atom587 = atom573*atom566+atom584*atom567;
atom590 = (esL+atom567*atom573)*atom566+atom567*atom587;
atom592 = 1+atom590^2;
atom593 = sqrt(atom592);
atom605 = atom581*atom566;
atom609 = atom584*atom566;
atom601 = atom587*atom566;
atom614 = 2*(atom567*(atom605+atom567*atom578*atom566)+atom609)*atom567+2*atom601;
atom619 = -atom593^(-2)*atom614*atom590*atom592^(-1/2);
atom625 = atom590+(0.5)*L_R*atom619;
atom623 = 1-(0.5)*atom590*L_R*atom619-(0.5)*atom593^(-1)*atom614*L_R;
atom634 = atom623^2;
atom642 = (atom634+atom625^2)^(-1/2);
atom9 = cos(a_pend);
atom644 = atom625*atom642;
atom10 = sin(a_pend);
atom8 = sin(b_pend);
atom11 = atom10*atom8;
atom643 = atom642*atom623;
atom1612 = atom11*atom643+atom9*atom644;
atom7 = cos(b_pend);
atom1608 = atom7*atom643;
atom13 = -atom9*atom8;
atom1617 = atom13*atom643+atom10*atom644;
atom1619 = atom13*atom1617+atom1612*atom11+atom1608*atom7;
atom1906 = -C11L*aL*G_elastic*atom1619*bL;
atom557 = uR_L-lR_L;
atom558 = aR_L*atom557;
atom559 = bR_L+atom558;
atom628 = atom559*atom557+cR_L+(atom559+atom558)*atom557;
atom647 = (1+atom628^2)^(-1/2);
atom648 = atom647*atom628;
atom1620 = atom648*atom8;
atom12 = -atom10*atom7;
atom1624 = atom12*atom648+atom9*atom647;
atom14 = atom9*atom7;
atom1629 = atom647*atom10+atom14*atom648;
atom1631 = atom1624*atom11+atom1620*atom7+atom13*atom1629;
atom1907 = -atom1631*aL*G_elastic*C22L*bL;
atom497 = uW_L-lW_L;
atom503 = dW_L+atom497*(atom497*(atom497*aW_L+bW_L)+cW_L);
atom6 = sin(c);
atom4 = sin(a);
atom506 = cos(thetaW_L)*atom503;
atom145 = atom6*atom4;
atom3 = cos(a);
atom144 = -atom6*atom3;
atom5 = cos(c);
atom504 = -atom503*sin(thetaW_L);
atom307 = -(0.5)*L_WHS;
atom922 = atom5*atom504+atom506*atom145-atom144*atom307+atom144*uW_L;
atom146 = atom5*atom3;
atom147 = -atom5*atom4;
atom923 = -atom307*atom146+uW_L*atom146+atom506*atom147+atom6*atom504;
atom984 = atom144*atom923-atom922*atom146;
atom924 = -atom307*atom4+uW_L*atom4+atom506*atom3;
atom981 = atom922*atom4-atom924*atom144;
atom1898 = atom984*atom648+atom981*atom647;
atom978 = -atom4*atom923+atom924*atom146;
atom1889 = atom981*atom644+atom978*atom643;
atom630 = -atom623*atom628;
atom629 = atom625*atom628;
atom636 = (atom634+atom629^2+atom630^2)^(-1/2);
atom637 = atom629*atom636;
atom638 = atom630*atom636;
atom639 = atom623*atom636;
atom1909 = sqrt(aL*bL);
atom1118 = atom637*atom144+atom639*atom4+atom638*atom146;
atom1910 = -atom1631*aL*G_elastic*bL*atom1909*C23L;
atom1899 = atom647*atom922;
atom1892 = atom644*atom922-atom923*atom643;
atom1031 = -atom5*atom924;
atom1895 = atom644*atom1031+atom924*atom6*atom643;
atom1902 = (atom5*atom923-atom6*atom922)*atom648+atom647*atom1031;
atom1905 = atom5*atom637+atom638*atom6;
atom1634 = atom1617*atom10+atom9*atom1612;
atom1911 = -atom1634*C11L*aL*G_elastic*bL;
atom1637 = atom1629*atom10+atom9*atom1624;
atom1912 = -aL*G_elastic*C22L*bL*atom1637;
atom1913 = -aL*G_elastic*bL*atom1909*atom1637*C23L;
atom1645 = atom1608*atom8+atom12*atom1612+atom14*atom1617;
atom1914 = -(atom978*atom1619+atom981*atom1634+atom1645*atom984)*C11L*aL*G_elastic*bL;
atom16 = -atom6*atom7;
atom1666 = atom637*atom7+atom639*atom8;
atom22 = -atom6*atom11+atom5*atom9;
atom1672 = atom637*atom11+atom638*atom9+atom12*atom639;
atom28 = -atom13*atom6+atom5*atom10;
atom1662 = atom13*atom637+atom14*atom639+atom638*atom10;
atom1675 = (atom28*atom3+atom14*atom4)*atom1662+atom1672*(atom22*atom3+atom12*atom4)+(atom16*atom3+atom4*atom8)*atom1666;
atom1655 = atom1620*atom8+atom14*atom1629+atom12*atom1624;
atom1657 = atom1655*atom984+atom1631*atom978+atom981*atom1637;
atom1917 = -atom1657*aL*G_elastic*C22L*bL+aL*G_elastic*bL*atom1909*C23L*atom1675;
atom1920 = bL^2;
atom1919 = aL^2;
atom1922 = -atom1657*aL*G_elastic*bL*atom1909*C23L-atom1920*C33L*G_elastic*atom1919*atom1675;
atom2 = sin(b);
atom1 = cos(b);
atom71 = -atom2*atom3;
atom156 = atom1*atom6-atom2*atom147;
atom159 = atom2*atom6+atom1*atom147;
atom72 = atom1*atom3;
atom1382 = atom4*atom146+atom159*atom72+atom71*atom156;
atom150 = -atom2*atom145+atom5*atom1;
atom153 = atom5*atom2+atom1*atom145;
atom1389 = atom144*atom4+atom72*atom153+atom71*atom150;
atom1473 = atom1389*atom923-atom1382*atom922;
atom1376 = atom4^2+atom71^2+atom72^2;
atom1470 = atom1376*atom922-atom924*atom1389;
atom1467 = atom924*atom1382-atom1376*atom923;
atom1923 = -C11L*aL*G_elastic*(atom1619*atom1467+atom1473*atom1645+atom1470*atom1634)*bL;
atom1685 = atom1631*atom1467+atom1470*atom1637+atom1473*atom1655;
atom15 = atom5*atom7;
atom34 = atom3*atom8-atom16*atom4;
atom19 = atom5*atom11+atom9*atom6;
atom40 = atom12*atom3-atom22*atom4;
atom46 = -atom28*atom4+atom14*atom3;
atom25 = atom5*atom13+atom10*atom6;
atom1690 = atom1662*(atom25*atom2+atom1*atom46)+atom1672*(atom1*atom40+atom2*atom19)+(atom2*atom15+atom34*atom1)*atom1666;
atom1697 = -(atom34*atom2-atom1*atom15)*atom1666+atom1662*(atom1*atom25-atom2*atom46)-atom1672*(atom2*atom40-atom1*atom19);
atom1700 = atom4*atom1675+atom71*atom1697+atom72*atom1690;
atom1926 = atom1700*aL*G_elastic*bL*atom1909*C23L-aL*G_elastic*C22L*bL*atom1685;
atom1929 = -atom1920*C33L*atom1700*G_elastic*atom1919-aL*G_elastic*bL*atom1685*atom1909*C23L;
atom1930 = -C11L*aL*G_elastic*atom1645*bL;
atom1931 = -atom1655*aL*G_elastic*C22L*bL;
atom1932 = -atom1655*aL*G_elastic*bL*atom1909*C23L;
atom1406 = atom2*atom72+atom1*atom71;
atom1415 = atom1*atom150+atom2*atom153;
atom1487 = -atom924*atom1415+atom1406*atom922;
atom1410 = atom1*atom156+atom2*atom159;
atom1484 = atom924*atom1410-atom1406*atom923;
atom1490 = -atom1410*atom922+atom923*atom1415;
atom1933 = -(atom1634*atom1487+atom1490*atom1645+atom1619*atom1484)*C11L*aL*G_elastic*bL;
atom1713 = atom1*atom1697+atom2*atom1690;
atom1710 = atom1487*atom1637+atom1490*atom1655+atom1631*atom1484;
atom1936 = aL*G_elastic*bL*atom1713*atom1909*C23L-atom1710*aL*G_elastic*C22L*bL;
atom1939 = -atom1710*aL*G_elastic*bL*atom1909*C23L-atom1920*C33L*G_elastic*atom1919*atom1713;

CKL_ = [atom1906*atom643 , atom647*atom1907+atom644*atom1906 , atom1907*atom1898+atom1889*atom1906+atom1118*atom1910 , atom1907*atom1899+atom1910*atom639+atom1892*atom1906 , atom1907*atom648 , atom1905*atom1910+atom1895*atom1906+atom1902*atom1907;
atom1911*atom643 , atom647*atom1912+atom644*atom1911 , atom1913*atom1118+atom1912*atom1898+atom1889*atom1911 , atom1912*atom1899+atom1892*atom1911+atom1913*atom639 , atom1912*atom648 , atom1905*atom1913+atom1895*atom1911+atom1902*atom1912;
atom1914*atom643 , atom644*atom1914+atom647*atom1917 , atom1118*atom1922+atom1889*atom1914+atom1898*atom1917 , atom1892*atom1914+atom1899*atom1917+atom1922*atom639 , atom648*atom1917 , atom1902*atom1917+atom1905*atom1922+atom1895*atom1914;
atom1923*atom643 , atom1923*atom644+atom647*atom1926 , atom1923*atom1889+atom1926*atom1898+atom1929*atom1118 , atom1923*atom1892+atom1899*atom1926+atom1929*atom639 , atom1926*atom648 , atom1923*atom1895+atom1905*atom1929+atom1902*atom1926;
atom1930*atom643 , atom644*atom1930+atom647*atom1931 , atom1118*atom1932+atom1931*atom1898+atom1889*atom1930 , atom1899*atom1931+atom1892*atom1930+atom1932*atom639 , atom1931*atom648 , atom1895*atom1930+atom1902*atom1931+atom1905*atom1932;
atom1933*atom643 , atom644*atom1933+atom1936*atom647 , atom1936*atom1898+atom1889*atom1933+atom1118*atom1939 , atom1892*atom1933+atom1936*atom1899+atom639*atom1939 , atom1936*atom648 , atom1905*atom1939+atom1936*atom1902+atom1895*atom1933];

%endfunction
