/* ********************************************************************************************* */
/*
/* This program integrates the multibody problem with different integrators 
/* Aitor Plaza & Roberto Yoldi
/* 
/* ********************************************************************************************* */
#include "defines.h"
#include "Includes_variables_parameters.h"
#include "Includes_functions.h"
#include "Includes_Init_functions.h"
#include "one_step.h"
/* ********************************************************************************************* */
/* ********************************************************************************************* */

/* ********************************************************************************************* */
/* If LIN_ALG library is used                                                                    */
/* ********************************************************************************************* */
#ifdef LIN_ALG
  #include "lin_alg.h"
  #include "Declare_Variables.h"
  #ifdef TIME_ON
    #include "timestamp.c"
  #endif

  extern void Initial_position_velocity (double * q, double *dq);
   

  #ifdef EULER
    extern void one_step_euler (double delta_t, double * q, double *dq);
  #endif
  #ifdef TRAPEZOIDAL
    extern void one_step_trapezoidal (double delta_t, double * q, double *dq);
  #endif
#endif

/* ********************************************************************************************* */
/* If LAPACK library is used                                                                     */
/* ********************************************************************************************* */
#ifdef LAPACK
  #if !defined(_WIN32)
    #define daxpy daxpy_
    #define dnrm2 dnrm2_
  #endif
  #if defined(__MINGW32__)
    #define dgelsd dgelsd_
    #define dgemv dgemv_
    #define daxpy daxpy_
    #define dnrm2 dnrm2_
  #endif
        
#ifdef MATLAB_MEX_FILE
    #define printf mexPrintf
#endif 
        
  #include "newton_raphson_min_norm.h"
  extern double dnrm2(int *n,double *x,int *incx);
#endif

/* ********************************************************************************************* */
/*#include "Energy.h"*/

int main (int argc, char *argv[]) {

#include "arguments.c"

#include "Init_variables_parameters.c"
#include "Init_functions.c"

/* ********************************************************************************************* */
/* Integration with LAPACK library                                                               */
/* ********************************************************************************************* */

#ifdef LAPACK
  #ifdef EULER
    #include "direct_dynamics_lagrange_with_multipliers_and_qr_proyection_euler_improved_init.c"
  #endif
  #ifdef TRAPEZOIDAL
    #include "direct_dynamics_lagrange_with_multipliers_trapezoidal_init.c"
  #endif
#endif

/* ********************************************************************************************* */
/* Integration with LIN_ALG library                                                              */
/* ********************************************************************************************* */
#ifdef LIN_ALG
  #include "direct_dynamics_lin_alg.c"
#endif

/* ********************************************************************************************* */
#ifdef TIME_ON
  printf("%s One step calculation time: %.9f secs\n",output_file_name,(end - start) / ((double) n_iterations));
#endif
#ifndef TIME_ON
  printf("The created file name is: %s\n",output_file_name);
#endif
/* ********************************************************************************************* */
/* ********************************************************************************************* */
#include "Done_variables_parameters.c"
#include "Done_functions.c"

    return 0;
}

