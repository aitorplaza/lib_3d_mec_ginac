function dPhic_dq_ = dPhic_dq(q,qaux,time,param)

xWAG = q( 1 ); 
yWAG = q( 2 ); 
zWAG = q( 3 ); 
aWAG = q( 4 ); 
bWAG = q( 5 ); 
cWAG = q( 6 ); 
cRSLD = q( 7 ); 
cFSLD = q( 8 ); 
zRBOG = q( 9 ); 
aRBOG = q( 10 ); 
bRBOG = q( 11 ); 
zFBOG = q( 12 ); 
aFBOG = q( 13 ); 
bFBOG = q( 14 ); 
zRWHSF = q( 15 ); 
aRWHSF = q( 16 ); 
bRWHSF = q( 17 ); 
zRWHSR = q( 18 ); 
aRWHSR = q( 19 ); 
bRWHSR = q( 20 ); 
zFWHSF = q( 21 ); 
aFWHSF = q( 22 ); 
bFWHSF = q( 23 ); 
zFWHSR = q( 24 ); 
aFWHSR = q( 25 ); 
bFWHSR = q( 26 ); 
bRAXBFL = q( 27 ); 
bRAXBFR = q( 28 ); 
bRAXBRL = q( 29 ); 
bRAXBRR = q( 30 ); 
bFAXBFL = q( 31 ); 
bFAXBFR = q( 32 ); 
bFAXBRL = q( 33 ); 
bFAXBRR = q( 34 ); 
xRMOTF = q( 35 ); 
yRMOTF = q( 36 ); 
zRMOTF = q( 37 ); 
bRMOTF = q( 38 ); 
xRMOTR = q( 39 ); 
yRMOTR = q( 40 ); 
zRMOTR = q( 41 ); 
bRMOTR = q( 42 ); 
bRROTF = q( 43 ); 
bRROTR = q( 44 ); 

thetaW_RFR = qaux( 1 ); 
uW_RFR = qaux( 2 ); 
uR_RFR = qaux( 3 ); 
xR_RFR = qaux( 4 ); 
thetaW_RFL = qaux( 5 ); 
uW_RFL = qaux( 6 ); 
uR_RFL = qaux( 7 ); 
xR_RFL = qaux( 8 ); 
thetaW_RRR = qaux( 9 ); 
uW_RRR = qaux( 10 ); 
uR_RRR = qaux( 11 ); 
xR_RRR = qaux( 12 ); 
thetaW_RRL = qaux( 13 ); 
uW_RRL = qaux( 14 ); 
uR_RRL = qaux( 15 ); 
xR_RRL = qaux( 16 ); 
thetaW_FFR = qaux( 17 ); 
uW_FFR = qaux( 18 ); 
uR_FFR = qaux( 19 ); 
xR_FFR = qaux( 20 ); 
thetaW_FFL = qaux( 21 ); 
uW_FFL = qaux( 22 ); 
uR_FFL = qaux( 23 ); 
xR_FFL = qaux( 24 ); 
thetaW_FRR = qaux( 25 ); 
uW_FRR = qaux( 26 ); 
uR_FRR = qaux( 27 ); 
xR_FRR = qaux( 28 ); 
thetaW_FRL = qaux( 29 ); 
uW_FRL = qaux( 30 ); 
uR_FRL = qaux( 31 ); 
xR_FRL = qaux( 32 ); 

t= time ;

g = param( 1 ); 
L_OBOG_OAXBy = param( 2 ); 
L_OBOG_OAXBz = param( 3 ); 
L_OBOG_OSUSPy = param( 4 ); 
L_OBOG_OSUSPx = param( 5 ); 
L_OBOG_OSUSPz = param( 6 ); 
L_OBOG_OWHS = param( 7 ); 
L_OBOG_P1BOG = param( 8 ); 
L_MOT = param( 9 ); 
L_GEAR = param( 10 ); 
L_AXB1 = param( 11 ); 
L_AXB2 = param( 12 ); 
L_SUSP = param( 13 ); 
L_WHS = param( 14 ); 
L_RAIL = param( 15 ); 
L_WAG = param( 16 ); 
L_SUSPBEAM1 = param( 17 ); 
L_SUSPBEAM2 = param( 18 ); 
L_SLDx = param( 19 ); 
L_SLDy = param( 20 ); 
b_pend = param( 21 ); 
a_pend = param( 22 ); 
L0_1 = param( 23 ); 
L0_2 = param( 24 ); 
m_WAG = param( 25 ); 
I_WAGx = param( 26 ); 
I_WAGy = param( 27 ); 
I_WAGz = param( 28 ); 
xCGWAG = param( 29 ); 
yCGWAG = param( 30 ); 
zCGWAG = param( 31 ); 
G_BOGz = param( 32 ); 
m_BOG = param( 33 ); 
I_BOGx = param( 34 ); 
I_BOGy = param( 35 ); 
I_BOGz = param( 36 ); 
m_MOT = param( 37 ); 
I_MOTx = param( 38 ); 
I_MOTy = param( 39 ); 
I_MOTz = param( 40 ); 
m_ROT = param( 41 ); 
I_ROTx = param( 42 ); 
I_ROTy = param( 43 ); 
I_ROTz = param( 44 ); 
m_WHS = param( 45 ); 
I_WHSx = param( 46 ); 
I_WHSy = param( 47 ); 
I_WHSz = param( 48 ); 
I_CORy = param( 49 ); 
m_AXB = param( 50 ); 
I_AXBx = param( 51 ); 
I_AXBy = param( 52 ); 
I_AXBz = param( 53 ); 
m_SLD = param( 54 ); 
I_SLDx = param( 55 ); 
I_SLDy = param( 56 ); 
I_SLDz = param( 57 ); 
K_SSl = param( 58 ); 
C_SSl = param( 59 ); 
C_SSr = param( 60 ); 
K_SSr = param( 61 ); 
Kgear = param( 62 ); 
Cgear = param( 63 ); 
alpha_gear = param( 64 ); 
zROT = param( 65 ); 
zWHS = param( 66 ); 
K_S1 = param( 67 ); 
C_S1 = param( 68 ); 
K_S2 = param( 69 ); 
C_S2 = param( 70 ); 
aW_RFR = param( 71 ); 
bW_RFR = param( 72 ); 
cW_RFR = param( 73 ); 
dW_RFR = param( 74 ); 
lW_RFR = param( 75 ); 
aR_RFR = param( 76 ); 
bR_RFR = param( 77 ); 
cR_RFR = param( 78 ); 
dR_RFR = param( 79 ); 
lR_RFR = param( 80 ); 
RFRas = param( 81 ); 
RFRbs = param( 82 ); 
RFRcs = param( 83 ); 
RFRds = param( 84 ); 
RFRes = param( 85 ); 
RFRfs = param( 86 ); 
RFRstas = param( 87 ); 
RFRends = param( 88 ); 
irrRFRz = param( 89 ); 
aW_RFL = param( 90 ); 
bW_RFL = param( 91 ); 
cW_RFL = param( 92 ); 
dW_RFL = param( 93 ); 
lW_RFL = param( 94 ); 
aR_RFL = param( 95 ); 
bR_RFL = param( 96 ); 
cR_RFL = param( 97 ); 
dR_RFL = param( 98 ); 
lR_RFL = param( 99 ); 
RFLas = param( 100 ); 
RFLbs = param( 101 ); 
RFLcs = param( 102 ); 
RFLds = param( 103 ); 
RFLes = param( 104 ); 
RFLfs = param( 105 ); 
RFLstas = param( 106 ); 
RFLends = param( 107 ); 
irrRFLz = param( 108 ); 
aW_RRR = param( 109 ); 
bW_RRR = param( 110 ); 
cW_RRR = param( 111 ); 
dW_RRR = param( 112 ); 
lW_RRR = param( 113 ); 
aR_RRR = param( 114 ); 
bR_RRR = param( 115 ); 
cR_RRR = param( 116 ); 
dR_RRR = param( 117 ); 
lR_RRR = param( 118 ); 
RRRas = param( 119 ); 
RRRbs = param( 120 ); 
RRRcs = param( 121 ); 
RRRds = param( 122 ); 
RRRes = param( 123 ); 
RRRfs = param( 124 ); 
RRRstas = param( 125 ); 
RRRends = param( 126 ); 
irrRRRz = param( 127 ); 
aW_RRL = param( 128 ); 
bW_RRL = param( 129 ); 
cW_RRL = param( 130 ); 
dW_RRL = param( 131 ); 
lW_RRL = param( 132 ); 
aR_RRL = param( 133 ); 
bR_RRL = param( 134 ); 
cR_RRL = param( 135 ); 
dR_RRL = param( 136 ); 
lR_RRL = param( 137 ); 
RRLas = param( 138 ); 
RRLbs = param( 139 ); 
RRLcs = param( 140 ); 
RRLds = param( 141 ); 
RRLes = param( 142 ); 
RRLfs = param( 143 ); 
RRLstas = param( 144 ); 
RRLends = param( 145 ); 
irrRRLz = param( 146 ); 
aW_FFR = param( 147 ); 
bW_FFR = param( 148 ); 
cW_FFR = param( 149 ); 
dW_FFR = param( 150 ); 
lW_FFR = param( 151 ); 
aR_FFR = param( 152 ); 
bR_FFR = param( 153 ); 
cR_FFR = param( 154 ); 
dR_FFR = param( 155 ); 
lR_FFR = param( 156 ); 
FFRas = param( 157 ); 
FFRbs = param( 158 ); 
FFRcs = param( 159 ); 
FFRds = param( 160 ); 
FFRes = param( 161 ); 
FFRfs = param( 162 ); 
FFRstas = param( 163 ); 
FFRends = param( 164 ); 
irrFFRz = param( 165 ); 
aW_FFL = param( 166 ); 
bW_FFL = param( 167 ); 
cW_FFL = param( 168 ); 
dW_FFL = param( 169 ); 
lW_FFL = param( 170 ); 
aR_FFL = param( 171 ); 
bR_FFL = param( 172 ); 
cR_FFL = param( 173 ); 
dR_FFL = param( 174 ); 
lR_FFL = param( 175 ); 
FFLas = param( 176 ); 
FFLbs = param( 177 ); 
FFLcs = param( 178 ); 
FFLds = param( 179 ); 
FFLes = param( 180 ); 
FFLfs = param( 181 ); 
FFLstas = param( 182 ); 
FFLends = param( 183 ); 
irrFFLz = param( 184 ); 
aW_FRR = param( 185 ); 
bW_FRR = param( 186 ); 
cW_FRR = param( 187 ); 
dW_FRR = param( 188 ); 
lW_FRR = param( 189 ); 
aR_FRR = param( 190 ); 
bR_FRR = param( 191 ); 
cR_FRR = param( 192 ); 
dR_FRR = param( 193 ); 
lR_FRR = param( 194 ); 
FRRas = param( 195 ); 
FRRbs = param( 196 ); 
FRRcs = param( 197 ); 
FRRds = param( 198 ); 
FRRes = param( 199 ); 
FRRfs = param( 200 ); 
FRRstas = param( 201 ); 
FRRends = param( 202 ); 
irrFRRz = param( 203 ); 
aW_FRL = param( 204 ); 
bW_FRL = param( 205 ); 
cW_FRL = param( 206 ); 
dW_FRL = param( 207 ); 
lW_FRL = param( 208 ); 
aR_FRL = param( 209 ); 
bR_FRL = param( 210 ); 
cR_FRL = param( 211 ); 
dR_FRL = param( 212 ); 
lR_FRL = param( 213 ); 
FRLas = param( 214 ); 
FRLbs = param( 215 ); 
FRLcs = param( 216 ); 
FRLds = param( 217 ); 
FRLes = param( 218 ); 
FRLfs = param( 219 ); 
FRLstas = param( 220 ); 
FRLends = param( 221 ); 
irrFRLz = param( 222 ); 

atom1810 = uR_RFR-lR_RFR;
atom1811 = aR_RFR*atom1810;
atom1812 = atom1811+bR_RFR;
atom1818 = (RFRstas-RFRends)^(-1);
atom1831 = -RFRas*atom1818;
atom1820 = atom1818*(RFRstas-xR_RFR);
atom1822 = atom1820*RFRas+RFRbs;
atom1834 = -atom1822*atom1818+atom1831*atom1820;
atom1824 = atom1820*atom1822+RFRcs;
atom1837 = -atom1818*atom1824+atom1820*atom1834;
atom1826 = RFRds+atom1820*atom1824;
atom1840 = atom1820*atom1837-atom1818*atom1826;
atom1857 = -atom1834*atom1818;
atom1860 = -atom1818*atom1837;
atom1864 = -atom1818*atom1840;
atom1843 = -atom1818*(atom1820*atom1826+RFRes)+atom1820*atom1840;
atom1867 = 2*(atom1860+atom1820*(atom1857-atom1831*atom1820*atom1818))*atom1820+2*atom1864;
atom1845 = 1+atom1843^2;
atom1846 = sqrt(atom1845);
atom1872 = -atom1846^(-2)*atom1843*atom1867*atom1845^(-1/2);
atom1881 = cR_RFR+atom1812*atom1810+atom1810*(atom1812+atom1811);
atom1882 = atom1881*(-(0.5)*atom1872*L_RAIL+atom1843);
atom1876 = 1+(0.5)*atom1846^(-1)*atom1867*L_RAIL+(0.5)*atom1872*atom1843*L_RAIL;
atom1883 = -atom1876*atom1881;
atom1916 = (atom1876^2+atom1882^2+atom1883^2)^(-1/2);
atom863 = sin(aRBOG);
atom864 = cos(bRBOG);
atom30 = cos(aRWHSF);
atom1702 = -(0.5)*L_WHS;
atom868 = atom863*atom864;
atom1714 = atom30*atom1702;
atom865 = sin(bRBOG);
atom1726 = atom868*atom1714;
atom1725 = -L_OBOG_OWHS*atom865;
atom31 = sin(aRWHSF);
atom1715 = atom1702*atom31;
atom862 = cos(aRBOG);
atom1716 = atom1715+zRWHSF;
atom869 = atom862*atom864;
atom1729 = atom1716*atom869+atom1726+atom1725;
atom1176 = cos(cWAG);
atom1174 = cos(aWAG);
atom1180 = atom1176*atom1174;
atom1172 = cos(bWAG);
atom1730 = zRBOG+atom1729;
atom3771 = -atom1180*atom1172;
atom867 = atom862*atom865;
atom866 = atom863*atom865;
atom1717 = L_OBOG_OWHS*atom864;
atom1718 = atom866*atom1714;
atom1721 = atom1717+atom867*atom1716+atom1718;
atom1210 = sin(cRSLD);
atom1722 = atom862*atom1714;
atom1724 = -atom863*atom1716+atom1722;
atom1209 = cos(cRSLD);
atom1175 = sin(aWAG);
atom1736 = atom1721*atom1210+atom1724*atom1209;
atom1181 = -atom1175*atom1176;
atom1173 = sin(bWAG);
atom1733 = -atom1724*atom1210+atom1721*atom1209;
atom0 = -1/2*L_WAG;
atom3774 = atom1180*atom1173;
atom1737 = atom1733+atom0;
atom3782 = atom1181*atom1209-atom3774*atom1210;
atom3776 = atom1181*atom1210+atom1209*atom3774;
atom3786 = atom865*atom3776+atom3771*atom864;
atom3792 = -atom3782*atom863+atom862*atom3786;
atom3788 = atom863*atom3786+atom862*atom3782;
atom1704 = uW_RFR-lW_RFR;
atom1710 = ((bW_RFR+aW_RFR*atom1704)*atom1704+cW_RFR)*atom1704+dW_RFR;
atom3799 = -atom3788*atom31+atom3792*atom30;
atom1713 = cos(thetaW_RFR)*atom1710;
atom3778 = -atom3771*atom865+atom864*atom3776;
atom1711 = -atom1710*sin(thetaW_RFR);
atom3794 = atom3792*atom31+atom30*atom3788;
atom1918 = atom1916*atom1883;
atom1177 = sin(cWAG);
atom1178 = -atom1177*atom1174;
atom3735 = atom1173*atom1178;
atom1179 = atom1175*atom1177;
atom3733 = -atom1172*atom1178;
atom3738 = atom1179*atom1210+atom3735*atom1209;
atom3740 = atom865*atom3738+atom864*atom3733;
atom3744 = -atom3735*atom1210+atom1209*atom1179;
atom3746 = -atom3744*atom863+atom3740*atom862;
atom3750 = atom3740*atom863+atom862*atom3744;
atom3752 = -atom3750*atom31+atom3746*atom30;
atom3756 = atom3750*atom30+atom3746*atom31;
atom3760 = atom864*atom3738-atom3733*atom865;
atom1917 = atom1882*atom1916;
atom3811 = atom1175*atom1173;
atom3814 = -atom1175*atom1172;
atom3819 = atom1174*atom1210+atom3811*atom1209;
atom3826 = atom864*atom3814+atom3819*atom865;
atom3830 = -atom3811*atom1210+atom1209*atom1174;
atom3832 = atom862*atom3826-atom863*atom3830;
atom3836 = atom863*atom3826+atom862*atom3830;
atom3843 = atom3832*atom30-atom3836*atom31;
atom3838 = atom3836*atom30+atom3832*atom31;
atom3822 = atom3819*atom864-atom3814*atom865;
atom1919 = atom1876*atom1916;
atom1193 = atom1177*atom1173+atom1172*atom1181;
atom1190 = -atom1181*atom1173+atom1172*atom1177;
atom3880 = -atom1193*atom1209;
atom3882 = -atom1190*atom865+atom864*atom3880;
atom3884 = atom1193*atom1210;
atom3888 = atom3880*atom865+atom864*atom1190;
atom3890 = atom862*atom3884+atom863*atom3888;
atom3894 = -atom863*atom3884+atom862*atom3888;
atom3896 = atom3894*atom31+atom30*atom3890;
atom3901 = -atom3890*atom31+atom3894*atom30;
atom1184 = atom1172*atom1176-atom1173*atom1179;
atom1187 = atom1172*atom1179+atom1176*atom1173;
atom3850 = -atom1187*atom1209;
atom3870 = -atom865*atom1184+atom3850*atom864;
atom3852 = atom3850*atom865+atom864*atom1184;
atom3854 = atom1187*atom1210;
atom3860 = atom862*atom3854+atom863*atom3852;
atom3856 = -atom863*atom3854+atom862*atom3852;
atom3866 = atom3860*atom30+atom3856*atom31;
atom3862 = -atom3860*atom31+atom3856*atom30;
atom1194 = -atom1173*atom1174;
atom1195 = atom1172*atom1174;
atom3913 = -atom1195*atom1209;
atom3920 = atom3913*atom865+atom864*atom1194;
atom3922 = atom1195*atom1210;
atom3928 = atom863*atom3920+atom862*atom3922;
atom3924 = atom862*atom3920-atom863*atom3922;
atom3935 = -atom3928*atom31+atom3924*atom30;
atom3930 = atom3928*atom30+atom3924*atom31;
atom3916 = -atom1194*atom865+atom3913*atom864;
atom1219 = atom1180*atom1210+atom1190*atom1209;
atom1237 = atom864*atom1219-atom1193*atom865;
atom1222 = atom1180*atom1209-atom1190*atom1210;
atom1240 = atom1219*atom865+atom1193*atom864;
atom1255 = atom862*atom1222+atom863*atom1240;
atom1258 = -atom863*atom1222+atom862*atom1240;
atom1279 = atom1258*atom31+atom1255*atom30;
atom1282 = atom1258*atom30-atom1255*atom31;
atom1213 = atom1209*atom1184+atom1178*atom1210;
atom1234 = atom1213*atom865+atom864*atom1187;
atom1216 = -atom1184*atom1210+atom1209*atom1178;
atom1252 = atom862*atom1234-atom863*atom1216;
atom1249 = atom863*atom1234+atom862*atom1216;
atom1276 = atom1252*atom30-atom1249*atom31;
atom1273 = atom1252*atom31+atom30*atom1249;
atom1231 = atom1213*atom864-atom1187*atom865;
atom1228 = atom1175*atom1209-atom1194*atom1210;
atom3998 = atom1228*atom864;
atom4000 = atom1228*atom865;
atom1225 = atom1194*atom1209+atom1175*atom1210;
atom4007 = atom863*atom4000-atom862*atom1225;
atom4003 = atom862*atom4000+atom863*atom1225;
atom4009 = atom4003*atom31+atom4007*atom30;
atom4014 = -atom4007*atom31+atom4003*atom30;
atom3946 = atom1216*atom865;
atom3953 = -atom862*atom1213+atom863*atom3946;
atom3949 = atom863*atom1213+atom862*atom3946;
atom3955 = atom3949*atom30-atom3953*atom31;
atom3959 = atom3953*atom30+atom3949*atom31;
atom3961 = atom1216*atom864;
atom3970 = atom1222*atom864;
atom3973 = atom1222*atom865;
atom3979 = atom863*atom1219+atom862*atom3973;
atom3975 = -atom862*atom1219+atom863*atom3973;
atom3981 = atom3979*atom31+atom3975*atom30;
atom3986 = -atom3975*atom31+atom3979*atom30;
atom1246 = atom1195*atom864+atom1225*atom865;
atom1264 = atom862*atom1246-atom863*atom1228;
atom1261 = atom862*atom1228+atom863*atom1246;
atom1288 = -atom1261*atom31+atom30*atom1264;
atom1285 = atom30*atom1261+atom1264*atom31;
atom4028 = atom1714*atom869;
atom4030 = atom4028-atom868*atom1716;
atom4033 = atom1714*atom867;
atom4034 = -atom866*atom1716+atom4033;
atom4037 = -atom863*atom1714;
atom4038 = atom4037-atom862*atom1716;
atom4040 = atom4034*atom1210+atom4038*atom1209;
atom4044 = atom4034*atom1209-atom4038*atom1210;
atom4068 = -atom1285*atom1713+uW_RFR*atom1288;
atom4052 = uW_RFR*atom1282-atom1713*atom1279;
atom4027 = uW_RFR*atom1276-atom1273*atom1713;
atom4074 = atom1231*atom863;
atom4072 = atom1231*atom862;
atom4080 = atom4072*atom31+atom4074*atom30;
atom4076 = -atom4074*atom31+atom30*atom4072;
atom4086 = atom1729*atom1210;
atom4088 = atom1729*atom1209;
atom4097 = atom862*atom1237;
atom4095 = atom863*atom1237;
atom4104 = -atom4095*atom31+atom30*atom4097;
atom4099 = atom4095*atom30+atom4097*atom31;
atom1243 = atom1225*atom864-atom1195*atom865;
atom4123 = atom1243*atom863;
atom4121 = atom862*atom1243;
atom4130 = -atom31*atom4123+atom30*atom4121;
atom4125 = atom30*atom4123+atom4121*atom31;
atom4139 = -atom863*atom1209+atom867*atom1210;
atom4143 = atom867*atom1209+atom863*atom1210;
atom4146 = atom4143*atom1184+atom4139*atom1178+atom1187*atom869;
atom4152 = atom1193*atom869+atom1180*atom4139+atom4143*atom1190;
atom4159 = atom4139*atom1175+atom1195*atom869+atom4143*atom1194;
atom4166 = -atom866*atom1715+atom4033;
atom4169 = atom4037-atom862*atom1715;
atom4171 = atom4166*atom1210+atom1209*atom4169;
atom4175 = -atom4169*atom1210+atom1209*atom4166;
atom4163 = -atom1715*atom868+atom4028;
atom4193 = atom1195*atom4163+atom1194*atom4175+atom4171*atom1175;
atom4178 = atom4163*atom1187+atom4175*atom1184+atom4171*atom1178;
atom4185 = atom4175*atom1190+atom1180*atom4171+atom1193*atom4163;
atom2069 = (RFLstas-RFLends)^(-1);
atom2071 = atom2069*(RFLstas-xR_RFL);
atom2073 = atom2071*RFLas+RFLbs;
atom2075 = RFLcs+atom2071*atom2073;
atom2077 = atom2071*atom2075+RFLds;
atom2082 = -atom2069*RFLas;
atom2085 = atom2082*atom2071-atom2073*atom2069;
atom2088 = -atom2069*atom2075+atom2071*atom2085;
atom2091 = atom2071*atom2088-atom2069*atom2077;
atom2094 = atom2071*atom2091-atom2069*(atom2071*atom2077+RFLes);
atom2096 = 1+atom2094^2;
atom2097 = sqrt(atom2096);
atom2108 = -atom2085*atom2069;
atom2112 = -atom2069*atom2088;
atom2105 = -atom2069*atom2091;
atom2118 = 2*atom2105+(2*atom2112+(-(2.0)*atom2082*atom2071*atom2069+2*atom2108)*atom2071)*atom2071;
atom2123 = -atom2094*atom2096^(-1/2)*atom2118*atom2097^(-2);
atom2127 = 1-(0.5)*atom2094*atom2123*L_RAIL-(0.5)*atom2118*atom2097^(-1)*L_RAIL;
atom2061 = uR_RFL-lR_RFL;
atom2062 = atom2061*aR_RFL;
atom2063 = atom2062+bR_RFL;
atom2132 = atom2063*atom2061+(atom2063+atom2062)*atom2061+cR_RFL;
atom2134 = -atom2127*atom2132;
atom2133 = atom2132*(atom2094+(0.5)*atom2123*L_RAIL);
atom2167 = (atom2127^2+atom2133^2+atom2134^2)^(-1/2);
atom1972 = -atom1715+zRWHSF;
atom1975 = atom1972*atom867+atom1717-atom1718;
atom1977 = -atom1722-atom863*atom1972;
atom1987 = atom1977*atom1209+atom1975*atom1210;
atom1984 = -atom1977*atom1210+atom1975*atom1209;
atom1988 = atom1984+atom0;
atom1980 = atom1972*atom869-atom1726+atom1725;
atom1981 = zRBOG+atom1980;
atom1962 = uW_RFL-lW_RFL;
atom1968 = dW_RFL+(cW_RFL+(aW_RFL*atom1962+bW_RFL)*atom1962)*atom1962;
atom1969 = -sin(thetaW_RFL)*atom1968;
atom1971 = atom1968*cos(thetaW_RFL);
atom2169 = atom2167*atom2134;
atom2168 = atom2167*atom2133;
atom2170 = atom2167*atom2127;
atom4491 = -atom866*atom1972-atom4033;
atom4494 = -atom4037-atom862*atom1972;
atom4500 = atom4491*atom1209-atom4494*atom1210;
atom4496 = atom1209*atom4494+atom4491*atom1210;
atom4488 = -atom4028-atom868*atom1972;
atom4486 = -atom1285*atom1971+uW_RFL*atom1288;
atom4518 = uW_RFL*atom1276-atom1273*atom1971;
atom4508 = uW_RFL*atom1282-atom1971*atom1279;
atom4536 = atom1980*atom1209;
atom4534 = atom1980*atom1210;
atom2326 = (RRRstas-RRRends)^(-1);
atom2327 = atom2326*(RRRstas-xR_RRR);
atom2329 = atom2327*RRRas+RRRbs;
atom2331 = RRRcs+atom2327*atom2329;
atom2338 = -atom2326*RRRas;
atom2341 = -atom2329*atom2326+atom2327*atom2338;
atom2344 = atom2327*atom2341-atom2331*atom2326;
atom2333 = RRRds+atom2327*atom2331;
atom2347 = -atom2333*atom2326+atom2327*atom2344;
atom2350 = -atom2326*(atom2327*atom2333+RRRes)+atom2327*atom2347;
atom2352 = 1+atom2350^2;
atom2353 = sqrt(atom2352);
atom2361 = -atom2326*atom2341;
atom2367 = -atom2344*atom2326;
atom2372 = -atom2347*atom2326;
atom2374 = 2*atom2372+atom2327*(2*atom2367+atom2327*(-(2.0)*atom2327*atom2338*atom2326+2*atom2361));
atom2379 = -atom2350*atom2352^(-1/2)*atom2374*atom2353^(-2);
atom2317 = uR_RRR-lR_RRR;
atom2318 = atom2317*aR_RRR;
atom2319 = atom2318+bR_RRR;
atom2388 = cR_RRR+atom2317*(atom2318+atom2319)+atom2317*atom2319;
atom2389 = (-(0.5)*L_RAIL*atom2379+atom2350)*atom2388;
atom2383 = 1+(0.5)*L_RAIL*atom2374*atom2353^(-1)+(0.5)*atom2350*L_RAIL*atom2379;
atom2390 = -atom2383*atom2388;
atom2423 = (atom2390^2+atom2389^2+atom2383^2)^(-1/2);
atom49 = cos(aRWHSR);
atom2223 = atom49*atom1702;
atom2226 = atom866*atom2223;
atom50 = sin(aRWHSR);
atom2224 = atom50*atom1702;
atom2225 = atom2224+zRWHSR;
atom2229 = -atom1717+atom2226+atom867*atom2225;
atom2230 = atom862*atom2223;
atom2232 = atom2230-atom863*atom2225;
atom2240 = atom1209*atom2229-atom2232*atom1210;
atom2244 = atom0+atom2240;
atom2243 = atom2229*atom1210+atom1209*atom2232;
atom2233 = atom868*atom2223;
atom2236 = atom2233-atom1725+atom2225*atom869;
atom2237 = zRBOG+atom2236;
atom4762 = atom49*atom3788+atom3792*atom50;
atom2212 = uW_RRR-lW_RRR;
atom2218 = atom2212*(cW_RRR+atom2212*(bW_RRR+atom2212*aW_RRR))+dW_RRR;
atom2220 = -sin(thetaW_RRR)*atom2218;
atom4768 = -atom50*atom3788+atom3792*atom49;
atom2222 = atom2218*cos(thetaW_RRR);
atom2425 = atom2423*atom2390;
atom4785 = atom3750*atom49+atom50*atom3746;
atom4791 = atom49*atom3746-atom3750*atom50;
atom2424 = atom2423*atom2389;
atom4809 = atom3832*atom50+atom49*atom3836;
atom4804 = atom3832*atom49-atom50*atom3836;
atom2426 = atom2423*atom2383;
atom4854 = atom3924*atom49-atom3928*atom50;
atom4859 = atom3924*atom50+atom3928*atom49;
atom4843 = atom3856*atom49-atom50*atom3860;
atom4837 = atom49*atom3860+atom3856*atom50;
atom4824 = atom3894*atom49-atom50*atom3890;
atom4818 = atom49*atom3890+atom3894*atom50;
atom1310 = atom49*atom1249+atom50*atom1252;
atom1313 = -atom50*atom1249+atom49*atom1252;
atom1316 = atom1255*atom49+atom1258*atom50;
atom1319 = -atom1255*atom50+atom1258*atom49;
atom4898 = atom49*atom3949-atom50*atom3953;
atom4892 = atom3949*atom50+atom49*atom3953;
atom4879 = atom3979*atom49-atom3975*atom50;
atom4873 = atom3975*atom49+atom3979*atom50;
atom4909 = atom4003*atom49-atom4007*atom50;
atom4914 = atom4003*atom50+atom49*atom4007;
atom1325 = atom49*atom1264-atom50*atom1261;
atom1322 = atom49*atom1261+atom50*atom1264;
atom4933 = atom867*atom2223;
atom4935 = atom4933-atom866*atom2225;
atom4938 = -atom863*atom2223;
atom4939 = atom4938-atom862*atom2225;
atom4941 = atom4939*atom1209+atom4935*atom1210;
atom4945 = atom4935*atom1209-atom4939*atom1210;
atom4930 = atom2223*atom869;
atom4931 = atom4930-atom868*atom2225;
atom4969 = uW_RRR*atom1325-atom2222*atom1322;
atom4958 = uW_RRR*atom1313-atom2222*atom1310;
atom4928 = atom1319*uW_RRR-atom1316*atom2222;
atom4985 = atom2236*atom1210;
atom4987 = atom1209*atom2236;
atom5006 = atom49*atom4072-atom4074*atom50;
atom5000 = atom4074*atom49+atom50*atom4072;
atom4981 = atom49*atom4097-atom50*atom4095;
atom4975 = atom50*atom4097+atom49*atom4095;
atom5024 = atom49*atom4123+atom50*atom4121;
atom5019 = atom49*atom4121-atom50*atom4123;
atom5037 = atom4930-atom2224*atom868;
atom5040 = atom4933-atom866*atom2224;
atom5043 = atom4938-atom862*atom2224;
atom5049 = -atom5043*atom1210+atom1209*atom5040;
atom5045 = atom5040*atom1210+atom1209*atom5043;
atom5067 = atom5045*atom1175+atom1195*atom5037+atom5049*atom1194;
atom5052 = atom1193*atom5037+atom5049*atom1190+atom5045*atom1180;
atom5059 = atom5049*atom1184+atom5045*atom1178+atom1187*atom5037;
atom2568 = uR_RRL-lR_RRL;
atom2569 = atom2568*aR_RRL;
atom2570 = bR_RRL+atom2569;
atom2577 = (RRLstas-RRLends)^(-1);
atom2578 = (RRLstas-xR_RRL)*atom2577;
atom2580 = atom2578*RRLas+RRLbs;
atom2582 = RRLcs+atom2578*atom2580;
atom2584 = atom2578*atom2582+RRLds;
atom2589 = -RRLas*atom2577;
atom2592 = atom2578*atom2589-atom2580*atom2577;
atom2595 = -atom2582*atom2577+atom2578*atom2592;
atom2598 = atom2578*atom2595-atom2584*atom2577;
atom2601 = atom2578*atom2598-(atom2578*atom2584+RRLes)*atom2577;
atom2603 = 1+atom2601^2;
atom2604 = sqrt(atom2603);
atom2616 = -atom2592*atom2577;
atom2612 = -atom2595*atom2577;
atom2623 = -atom2598*atom2577;
atom2625 = 2*atom2623-2*atom2578*(atom2578*(atom2578*atom2589*atom2577-atom2616)-atom2612);
atom2630 = -atom2603^(-1/2)*atom2601*atom2625*atom2604^(-2);
atom2639 = atom2570*atom2568+(atom2570+atom2569)*atom2568+cR_RRL;
atom2634 = 1-(0.5)*atom2601*atom2630*L_RAIL-(0.5)*atom2625*L_RAIL*atom2604^(-1);
atom2641 = -atom2639*atom2634;
atom2640 = ((0.5)*atom2630*L_RAIL+atom2601)*atom2639;
atom2674 = (atom2634^2+atom2641^2+atom2640^2)^(-1/2);
atom2479 = -atom2224+zRWHSR;
atom2482 = -atom1717+atom867*atom2479-atom2226;
atom2484 = -atom863*atom2479-atom2230;
atom2494 = atom1209*atom2484+atom2482*atom1210;
atom2491 = -atom2484*atom1210+atom2482*atom1209;
atom2495 = atom0+atom2491;
atom2487 = -atom2233+atom2479*atom869-atom1725;
atom2488 = atom2487+zRBOG;
atom2469 = uW_RRL-lW_RRL;
atom2475 = dW_RRL+atom2469*(cW_RRL+atom2469*(atom2469*aW_RRL+bW_RRL));
atom2478 = atom2475*cos(thetaW_RRL);
atom2476 = -sin(thetaW_RRL)*atom2475;
atom2677 = atom2634*atom2674;
atom2675 = atom2674*atom2640;
atom2676 = atom2641*atom2674;
atom5379 = -atom868*atom2479-atom4930;
atom5366 = -atom4933-atom866*atom2479;
atom5369 = -atom862*atom2479-atom4938;
atom5375 = atom5366*atom1209-atom5369*atom1210;
atom5371 = atom5366*atom1210+atom1209*atom5369;
atom5364 = uW_RRL*atom1325-atom2478*atom1322;
atom5391 = atom1319*uW_RRL-atom1316*atom2478;
atom5401 = uW_RRL*atom1313-atom2478*atom1310;
atom5413 = atom2487*atom1209;
atom5411 = atom2487*atom1210;
atom2834 = (FFRends-FFRstas)^(-1);
atom2836 = atom2834*(xR_FFR-FFRstas);
atom2838 = FFRbs+atom2836*FFRas;
atom2840 = FFRcs+atom2836*atom2838;
atom2842 = FFRds+atom2836*atom2840;
atom2847 = atom2834*FFRas;
atom2850 = atom2834*atom2838+atom2836*atom2847;
atom2853 = atom2834*atom2840+atom2836*atom2850;
atom2856 = atom2836*atom2853+atom2842*atom2834;
atom2871 = atom2834*atom2850;
atom2870 = atom2834*atom2853;
atom2881 = atom2834*atom2856;
atom2859 = atom2836*atom2856+atom2834*(FFRes+atom2836*atom2842);
atom2861 = 1+atom2859^2;
atom2862 = sqrt(atom2861);
atom2883 = 2*atom2881+2*atom2836*(atom2870+atom2836*(atom2871+atom2836*atom2834*atom2847));
atom2888 = -atom2862^(-2)*atom2859*atom2861^(-1/2)*atom2883;
atom2892 = 1+(0.5)*atom2888*atom2859*L_RAIL+(0.5)*atom2862^(-1)*atom2883*L_RAIL;
atom2826 = uR_FFR-lR_FFR;
atom2827 = atom2826*aR_FFR;
atom2828 = bR_FFR+atom2827;
atom2897 = atom2828*atom2826+cR_FFR+atom2826*(atom2828+atom2827);
atom2899 = -atom2892*atom2897;
atom2898 = atom2897*(atom2859-(0.5)*atom2888*L_RAIL);
atom2932 = (atom2899^2+atom2892^2+atom2898^2)^(-1/2);
atom2720 = uW_FFR-lW_FFR;
atom2726 = dW_FFR+(cW_FFR+(bW_FFR+aW_FFR*atom2720)*atom2720)*atom2720;
atom1496 = cos(cFSLD);
atom1497 = sin(cFSLD);
atom5646 = atom1181*atom1496-atom1497*atom3774;
atom1017 = sin(aFBOG);
atom1019 = sin(bFBOG);
atom5639 = atom1496*atom3774+atom1497*atom1181;
atom1018 = cos(bFBOG);
atom5642 = atom1018*atom3771+atom1019*atom5639;
atom1016 = cos(aFBOG);
atom5648 = -atom5646*atom1017+atom5642*atom1016;
atom497 = cos(aFWHSF);
atom5652 = atom5642*atom1017+atom5646*atom1016;
atom498 = sin(aFWHSF);
atom2729 = atom2726*cos(thetaW_FFR);
atom5654 = atom5648*atom497-atom5652*atom498;
atom5658 = atom5648*atom498+atom497*atom5652;
atom5662 = -atom1019*atom3771+atom1018*atom5639;
atom2727 = -sin(thetaW_FFR)*atom2726;
atom1020 = atom1019*atom1017;
atom2730 = atom497*atom1702;
atom2733 = atom1018*L_OBOG_OWHS;
atom2734 = atom1020*atom2730;
atom2731 = atom498*atom1702;
atom1021 = atom1019*atom1016;
atom2732 = atom2731+zFWHSF;
atom2737 = atom1021*atom2732+atom2733+atom2734;
atom2738 = atom1016*atom2730;
atom2740 = -atom2732*atom1017+atom2738;
atom2752 = atom1497*atom2737+atom2740*atom1496;
atom2749 = -atom1497*atom2740+atom2737*atom1496;
atom2753 = -atom0+atom2749;
atom1022 = atom1018*atom1017;
atom2741 = -L_OBOG_OWHS*atom1019;
atom2742 = atom2730*atom1022;
atom1023 = atom1018*atom1016;
atom2745 = atom2741+atom2742+atom1023*atom2732;
atom2746 = zFBOG+atom2745;
atom2934 = atom2899*atom2932;
atom5687 = atom1179*atom1496-atom1497*atom3735;
atom5681 = atom3735*atom1496+atom1497*atom1179;
atom5683 = atom1019*atom5681+atom1018*atom3733;
atom5689 = -atom5687*atom1017+atom1016*atom5683;
atom5693 = atom5683*atom1017+atom5687*atom1016;
atom5699 = atom497*atom5693+atom498*atom5689;
atom5703 = atom1018*atom5681-atom1019*atom3733;
atom5695 = atom497*atom5689-atom498*atom5693;
atom2933 = atom2932*atom2898;
atom5713 = atom3811*atom1496+atom1497*atom1174;
atom5715 = atom1018*atom5713-atom1019*atom3814;
atom5719 = atom1019*atom5713+atom1018*atom3814;
atom5723 = atom1496*atom1174-atom3811*atom1497;
atom5729 = atom5719*atom1017+atom5723*atom1016;
atom5725 = -atom5723*atom1017+atom1016*atom5719;
atom5731 = atom497*atom5729+atom498*atom5725;
atom5736 = atom497*atom5725-atom498*atom5729;
atom2935 = atom2932*atom2892;
atom5809 = -atom1195*atom1496;
atom5815 = atom1019*atom5809+atom1018*atom1194;
atom5817 = atom1497*atom1195;
atom5819 = atom5815*atom1016-atom5817*atom1017;
atom5823 = atom5815*atom1017+atom5817*atom1016;
atom5825 = atom497*atom5823+atom5819*atom498;
atom5811 = atom1018*atom5809-atom1019*atom1194;
atom5830 = atom497*atom5819-atom498*atom5823;
atom5747 = -atom1193*atom1496;
atom5768 = atom5747*atom1018-atom1019*atom1190;
atom5750 = atom5747*atom1019+atom1018*atom1190;
atom5752 = atom1497*atom1193;
atom5754 = -atom5752*atom1017+atom5750*atom1016;
atom5758 = atom5750*atom1017+atom5752*atom1016;
atom5764 = atom5754*atom498+atom497*atom5758;
atom5760 = atom497*atom5754-atom498*atom5758;
atom5781 = -atom1187*atom1496;
atom5783 = atom1018*atom1184+atom1019*atom5781;
atom5785 = atom1497*atom1187;
atom5791 = atom5785*atom1016+atom5783*atom1017;
atom5787 = atom5783*atom1016-atom5785*atom1017;
atom5797 = atom497*atom5791+atom498*atom5787;
atom5801 = -atom1019*atom1184+atom1018*atom5781;
atom5793 = atom497*atom5787-atom498*atom5791;
atom1500 = atom1496*atom1184+atom1497*atom1178;
atom1521 = atom1019*atom1500+atom1018*atom1187;
atom1503 = atom1496*atom1178-atom1497*atom1184;
atom1539 = -atom1503*atom1017+atom1016*atom1521;
atom1536 = atom1521*atom1017+atom1503*atom1016;
atom1562 = atom497*atom1539-atom498*atom1536;
atom1559 = atom497*atom1536+atom498*atom1539;
atom1518 = atom1018*atom1500-atom1019*atom1187;
atom1506 = atom1190*atom1496+atom1497*atom1180;
atom1527 = atom1019*atom1506+atom1193*atom1018;
atom1509 = atom1180*atom1496-atom1497*atom1190;
atom1545 = atom1527*atom1016-atom1017*atom1509;
atom1542 = atom1016*atom1509+atom1527*atom1017;
atom1568 = atom497*atom1545-atom498*atom1542;
atom1565 = atom497*atom1542+atom498*atom1545;
atom1524 = -atom1193*atom1019+atom1018*atom1506;
atom5844 = atom1019*atom1509;
atom5847 = atom1506*atom1017+atom1016*atom5844;
atom5851 = atom1017*atom5844-atom1016*atom1506;
atom5853 = atom497*atom5847-atom5851*atom498;
atom5857 = atom5851*atom497+atom498*atom5847;
atom5859 = atom1018*atom1509;
atom5871 = atom1503*atom1019;
atom5874 = atom5871*atom1016+atom1500*atom1017;
atom5878 = -atom1500*atom1016+atom5871*atom1017;
atom5880 = atom497*atom5874-atom5878*atom498;
atom5884 = atom498*atom5874+atom5878*atom497;
atom5886 = atom1503*atom1018;
atom1515 = atom1175*atom1496-atom1497*atom1194;
atom5893 = atom1515*atom1018;
atom1512 = atom1194*atom1496+atom1497*atom1175;
atom5895 = atom1515*atom1019;
atom5898 = atom1512*atom1017+atom1016*atom5895;
atom5902 = atom5895*atom1017-atom1512*atom1016;
atom5904 = atom497*atom5902+atom498*atom5898;
atom5909 = -atom498*atom5902+atom497*atom5898;
atom1533 = atom1018*atom1195+atom1019*atom1512;
atom1551 = -atom1515*atom1017+atom1016*atom1533;
atom1548 = atom1533*atom1017+atom1515*atom1016;
atom1571 = atom497*atom1548+atom498*atom1551;
atom1574 = -atom498*atom1548+atom497*atom1551;
atom5935 = -atom2730*atom1017;
atom5936 = -atom1016*atom2732+atom5935;
atom5930 = atom1021*atom2730;
atom5932 = atom5930-atom1020*atom2732;
atom5938 = atom5936*atom1496+atom1497*atom5932;
atom5942 = atom5932*atom1496-atom1497*atom5936;
atom5926 = atom1023*atom2730;
atom5928 = -atom2732*atom1022+atom5926;
atom5961 = -atom2729*atom1571+atom1574*uW_FFR;
atom5955 = atom1562*uW_FFR-atom2729*atom1559;
atom5925 = uW_FFR*atom1568-atom2729*atom1565;
atom5970 = atom1016*atom1524;
atom5972 = atom1524*atom1017;
atom5974 = -atom5972*atom498+atom5970*atom497;
atom5978 = atom497*atom5972+atom5970*atom498;
atom5984 = atom1497*atom2745;
atom5986 = atom2745*atom1496;
atom5997 = atom1016*atom1518;
atom5999 = atom1017*atom1518;
atom6001 = atom5997*atom497-atom5999*atom498;
atom6005 = atom497*atom5999+atom5997*atom498;
atom1530 = -atom1019*atom1195+atom1018*atom1512;
atom6014 = atom1530*atom1016;
atom6016 = atom1530*atom1017;
atom6023 = atom6014*atom497-atom6016*atom498;
atom6018 = atom6016*atom497+atom6014*atom498;
atom6041 = atom1497*atom1017+atom1021*atom1496;
atom6037 = atom1497*atom1021-atom1496*atom1017;
atom6057 = atom1175*atom6037+atom1194*atom6041+atom1023*atom1195;
atom6050 = atom1023*atom1187+atom6041*atom1184+atom6037*atom1178;
atom6044 = atom1193*atom1023+atom1190*atom6041+atom1180*atom6037;
atom6061 = -atom2731*atom1022+atom5926;
atom6064 = atom5930-atom2731*atom1020;
atom6067 = atom5935-atom2731*atom1016;
atom6073 = atom6064*atom1496-atom1497*atom6067;
atom6069 = atom1496*atom6067+atom6064*atom1497;
atom6091 = atom6061*atom1195+atom1194*atom6073+atom6069*atom1175;
atom6076 = atom1190*atom6073+atom1180*atom6069+atom1193*atom6061;
atom6083 = atom6073*atom1184+atom6069*atom1178+atom6061*atom1187;
atom3086 = (FFLstas-FFLends)^(-1);
atom3087 = (FFLstas-xR_FFL)*atom3086;
atom3098 = -FFLas*atom3086;
atom3089 = atom3087*FFLas+FFLbs;
atom3101 = atom3087*atom3098-atom3089*atom3086;
atom3091 = FFLcs+atom3087*atom3089;
atom3104 = atom3087*atom3101-atom3091*atom3086;
atom3124 = -atom3086*atom3101;
atom3121 = -atom3104*atom3086;
atom3093 = FFLds+atom3087*atom3091;
atom3107 = atom3087*atom3104-atom3093*atom3086;
atom3131 = -atom3107*atom3086;
atom3110 = atom3087*atom3107-(atom3087*atom3093+FFLes)*atom3086;
atom3112 = 1+atom3110^2;
atom3113 = sqrt(atom3112);
atom3134 = 2*atom3087*((atom3124-atom3087*atom3098*atom3086)*atom3087+atom3121)+2*atom3131;
atom3139 = -atom3134*atom3113^(-2)*atom3110*atom3112^(-1/2);
atom3143 = 1-(0.5)*atom3139*atom3110*L_RAIL-(0.5)*atom3134*atom3113^(-1)*L_RAIL;
atom3077 = uR_FFL-lR_FFL;
atom3078 = aR_FFL*atom3077;
atom3079 = atom3078+bR_FFL;
atom3148 = cR_FFL+atom3079*atom3077+atom3077*(atom3079+atom3078);
atom3149 = (atom3110+(0.5)*atom3139*L_RAIL)*atom3148;
atom3150 = -atom3143*atom3148;
atom3183 = (atom3149^2+atom3150^2+atom3143^2)^(-1/2);
atom2988 = -atom2731+zFWHSF;
atom2993 = -atom1017*atom2988-atom2738;
atom2991 = atom1021*atom2988+atom2733-atom2734;
atom3003 = atom1497*atom2991+atom2993*atom1496;
atom3000 = atom2991*atom1496-atom1497*atom2993;
atom3004 = atom3000-atom0;
atom2996 = atom2741+atom1023*atom2988-atom2742;
atom2997 = zFBOG+atom2996;
atom2978 = uW_FFL-lW_FFL;
atom2984 = dW_FFL+atom2978*(atom2978*(atom2978*aW_FFL+bW_FFL)+cW_FFL);
atom2985 = -sin(thetaW_FFL)*atom2984;
atom2987 = cos(thetaW_FFL)*atom2984;
atom3184 = atom3183*atom3149;
atom3185 = atom3150*atom3183;
atom3186 = atom3183*atom3143;
atom6385 = -atom2988*atom1022-atom5926;
atom6375 = -atom1020*atom2988-atom5930;
atom6372 = -atom1016*atom2988-atom5935;
atom6377 = atom1497*atom6375+atom6372*atom1496;
atom6381 = atom1496*atom6375-atom1497*atom6372;
atom6390 = -atom2987*atom1571+uW_FFL*atom1574;
atom6405 = -atom2987*atom1565+uW_FFL*atom1568;
atom6395 = uW_FFL*atom1562-atom2987*atom1559;
atom6417 = atom2996*atom1496;
atom6415 = atom1497*atom2996;
atom3341 = (FRRstas-FRRends)^(-1);
atom3353 = -atom3341*FRRas;
atom3342 = atom3341*(FRRstas-xR_FRR);
atom3344 = FRRas*atom3342+FRRbs;
atom3356 = -atom3341*atom3344+atom3353*atom3342;
atom3346 = FRRcs+atom3344*atom3342;
atom3359 = atom3342*atom3356-atom3341*atom3346;
atom3348 = FRRds+atom3346*atom3342;
atom3362 = atom3359*atom3342-atom3341*atom3348;
atom3365 = atom3362*atom3342-atom3341*(atom3342*atom3348+FRRes);
atom3367 = 1+atom3365^2;
atom3368 = sqrt(atom3367);
atom3378 = -atom3341*atom3356;
atom3383 = -atom3341*atom3359;
atom3387 = -atom3341*atom3362;
atom3389 = 2*atom3342*(atom3383-(atom3341*atom3353*atom3342-atom3378)*atom3342)+2*atom3387;
atom3394 = -atom3368^(-2)*atom3365*atom3389*atom3367^(-1/2);
atom3332 = uR_FRR-lR_FRR;
atom3333 = atom3332*aR_FRR;
atom3334 = atom3333+bR_FRR;
atom3403 = atom3332*atom3334+cR_FRR+atom3332*(atom3333+atom3334);
atom3404 = (-(0.5)*L_RAIL*atom3394+atom3365)*atom3403;
atom3398 = 1+(0.5)*atom3368^(-1)*atom3389*L_RAIL+(0.5)*atom3365*L_RAIL*atom3394;
atom3405 = -atom3398*atom3403;
atom3438 = (atom3405^2+atom3404^2+atom3398^2)^(-1/2);
atom683 = cos(aFWHSR);
atom3239 = atom683*atom1702;
atom3249 = atom3239*atom1022;
atom684 = sin(aFWHSR);
atom3240 = atom684*atom1702;
atom3241 = zFWHSR+atom3240;
atom3252 = -atom2741+atom3241*atom1023+atom3249;
atom3253 = zFBOG+atom3252;
atom3242 = atom3239*atom1020;
atom3245 = -atom2733+atom3241*atom1021+atom3242;
atom3246 = atom3239*atom1016;
atom3248 = -atom3241*atom1017+atom3246;
atom3259 = atom1497*atom3245+atom3248*atom1496;
atom3256 = -atom1497*atom3248+atom3245*atom1496;
atom3260 = -atom0+atom3256;
atom3229 = uW_FRR-lW_FRR;
atom3235 = atom3229*(cW_FRR+atom3229*(bW_FRR+atom3229*aW_FRR))+dW_FRR;
atom3236 = -sin(thetaW_FRR)*atom3235;
atom6648 = atom684*atom5725+atom683*atom5729;
atom6653 = -atom684*atom5729+atom683*atom5725;
atom3238 = atom3235*cos(thetaW_FRR);
atom3441 = atom3398*atom3438;
atom6688 = -atom684*atom5693+atom683*atom5689;
atom6692 = atom684*atom5689+atom683*atom5693;
atom3439 = atom3404*atom3438;
atom6674 = atom683*atom5652+atom5648*atom684;
atom6670 = -atom684*atom5652+atom683*atom5648;
atom3440 = atom3405*atom3438;
atom6722 = atom683*atom5754-atom684*atom5758;
atom6726 = atom684*atom5754+atom683*atom5758;
atom6738 = -atom684*atom5791+atom683*atom5787;
atom6742 = atom684*atom5787+atom683*atom5791;
atom6709 = -atom684*atom5823+atom683*atom5819;
atom6704 = atom684*atom5819+atom683*atom5823;
atom1598 = atom683*atom1539-atom684*atom1536;
atom1595 = atom684*atom1539+atom683*atom1536;
atom1604 = atom683*atom1545-atom684*atom1542;
atom1601 = atom683*atom1542+atom684*atom1545;
atom6781 = atom684*atom5847+atom683*atom5851;
atom6777 = -atom684*atom5851+atom683*atom5847;
atom6793 = atom683*atom5874-atom5878*atom684;
atom6797 = atom684*atom5874+atom683*atom5878;
atom6764 = -atom684*atom5902+atom683*atom5898;
atom6759 = atom683*atom5902+atom684*atom5898;
atom6829 = atom3239*atom1023;
atom6831 = -atom3241*atom1022+atom6829;
atom6815 = -atom3239*atom1017;
atom6816 = atom6815-atom3241*atom1016;
atom6818 = atom3239*atom1021;
atom6820 = atom6818-atom3241*atom1020;
atom6826 = atom6816*atom1496+atom1497*atom6820;
atom6822 = atom6820*atom1496-atom1497*atom6816;
atom1607 = atom683*atom1548+atom684*atom1551;
atom1610 = -atom684*atom1548+atom683*atom1551;
atom6813 = atom1610*uW_FRR-atom1607*atom3238;
atom6853 = -atom3238*atom1595+atom1598*uW_FRR;
atom6843 = atom1604*uW_FRR-atom1601*atom3238;
atom6869 = atom1496*atom3252;
atom6871 = atom1497*atom3252;
atom6861 = atom6014*atom684+atom683*atom6016;
atom6866 = -atom6016*atom684+atom6014*atom683;
atom6889 = atom5970*atom684+atom683*atom5972;
atom6885 = -atom684*atom5972+atom683*atom5970;
atom6907 = atom683*atom5999+atom684*atom5997;
atom6903 = atom683*atom5997-atom684*atom5999;
atom6935 = -atom3240*atom1022+atom6829;
atom6922 = atom6815-atom1016*atom3240;
atom6925 = -atom1020*atom3240+atom6818;
atom6927 = atom6925*atom1496-atom1497*atom6922;
atom6931 = atom1497*atom6925+atom6922*atom1496;
atom6937 = atom6935*atom1195+atom6927*atom1194+atom1175*atom6931;
atom6944 = atom6927*atom1190+atom1193*atom6935+atom1180*atom6931;
atom6951 = atom6931*atom1178+atom6935*atom1187+atom6927*atom1184;
atom3591 = (FRLstas-FRLends)^(-1);
atom3592 = atom3591*(FRLstas-xR_FRL);
atom3594 = FRLbs+atom3592*FRLas;
atom3596 = FRLcs+atom3592*atom3594;
atom3598 = FRLds+atom3596*atom3592;
atom3603 = -FRLas*atom3591;
atom3606 = -atom3594*atom3591+atom3603*atom3592;
atom3609 = -atom3596*atom3591+atom3592*atom3606;
atom3612 = -atom3598*atom3591+atom3609*atom3592;
atom3615 = -atom3591*(atom3592*atom3598+FRLes)+atom3612*atom3592;
atom3617 = 1+atom3615^2;
atom3618 = sqrt(atom3617);
atom3629 = -atom3606*atom3591;
atom3634 = -atom3609*atom3591;
atom3626 = -atom3612*atom3591;
atom3639 = 2*atom3626+2*atom3592*(atom3634+atom3592*(atom3629-atom3603*atom3592*atom3591));
atom3644 = -atom3615*atom3617^(-1/2)*atom3639*atom3618^(-2);
atom3582 = uR_FRL-lR_FRL;
atom3583 = atom3582*aR_FRL;
atom3584 = atom3583+bR_FRL;
atom3653 = cR_FRL+atom3582*(atom3584+atom3583)+atom3584*atom3582;
atom3654 = (atom3615+(0.5)*atom3644*L_RAIL)*atom3653;
atom3648 = 1-(0.5)*atom3615*atom3644*L_RAIL-(0.5)*atom3639*L_RAIL*atom3618^(-1);
atom3655 = -atom3648*atom3653;
atom3688 = (atom3655^2+atom3654^2+atom3648^2)^(-1/2);
atom3494 = zFWHSR-atom3240;
atom3502 = -atom2741+atom3494*atom1023-atom3249;
atom3503 = zFBOG+atom3502;
atom3499 = -atom3494*atom1017-atom3246;
atom3497 = atom3494*atom1021-atom2733-atom3242;
atom3506 = atom3497*atom1496-atom1497*atom3499;
atom3510 = atom3506-atom0;
atom3509 = atom1497*atom3497+atom3499*atom1496;
atom3484 = uW_FRL-lW_FRL;
atom3490 = atom3484*(cW_FRL+(atom3484*aW_FRL+bW_FRL)*atom3484)+dW_FRL;
atom3491 = -sin(thetaW_FRL)*atom3490;
atom3493 = cos(thetaW_FRL)*atom3490;
atom3690 = atom3688*atom3655;
atom3689 = atom3654*atom3688;
atom3691 = atom3688*atom3648;
atom7252 = -atom3494*atom1020-atom6818;
atom7249 = -atom6815-atom3494*atom1016;
atom7254 = atom7249*atom1496+atom1497*atom7252;
atom7258 = atom1496*atom7252-atom1497*atom7249;
atom7262 = -atom6829-atom3494*atom1022;
atom7285 = atom1610*uW_FRL-atom1607*atom3493;
atom7274 = -atom3493*atom1595+atom1598*uW_FRL;
atom7247 = atom1604*uW_FRL-atom3493*atom1601;
atom7294 = atom1497*atom3502;
atom7296 = atom3502*atom1496;

dPhic_dq_ = [atom1917 , atom1918 , atom1919 , (atom3843*atom1713+atom3811*atom1737+atom1730*atom3814+uW_RFR*atom3838+atom3822*atom1711+atom1736*atom1174)*atom1919+(atom1736*atom1181+atom1730*atom3771+atom3778*atom1711+uW_RFR*atom3794+atom3799*atom1713+atom3774*atom1737)*atom1918+(uW_RFR*atom3756+atom3735*atom1737+atom3752*atom1713+atom3760*atom1711+atom1730*atom3733+atom1736*atom1179)*atom1917 , -atom1918*(atom1193*atom1737-atom1730*atom1190-uW_RFR*atom3896-atom3901*atom1713-atom3882*atom1711)+atom1917*(atom3862*atom1713+atom1730*atom1184+uW_RFR*atom3866-atom1187*atom1737+atom3870*atom1711)+(atom3935*atom1713+atom3916*atom1711+uW_RFR*atom3930-atom1195*atom1737+atom1730*atom1194)*atom1919 , -atom1917*(atom1180*atom1736+uW_RFR*atom1279+atom1711*atom1237+atom1190*atom1737+atom1282*atom1713+atom1730*atom1193)+(atom1184*atom1737+atom1276*atom1713+uW_RFR*atom1273+atom1730*atom1187+atom1231*atom1711+atom1736*atom1178)*atom1918 , atom1919*(atom4014*atom1713+atom3998*atom1711+uW_RFR*atom4009-atom1736*atom1194+atom1733*atom1175)+(atom3986*atom1713+atom3970*atom1711-atom1736*atom1190+atom1733*atom1180+uW_RFR*atom3981)*atom1918+atom1917*(uW_RFR*atom3959+atom3955*atom1713+atom1733*atom1178+atom3961*atom1711-atom1736*atom1184) , 0.0 , atom1919*atom1195+atom1193*atom1918+atom1917*atom1187 , atom1919*(atom4040*atom1175+atom4068+atom4044*atom1194+atom1195*atom4030)+(atom4044*atom1184+atom4027+atom4040*atom1178+atom1187*atom4030)*atom1917+(atom4052+atom1193*atom4030+atom1180*atom4040+atom4044*atom1190)*atom1918 , -(atom1711*atom1246+atom1195*atom1721-atom4088*atom1194-atom1175*atom4086-atom4125*uW_RFR-atom4130*atom1713)*atom1919+(uW_RFR*atom4080-atom1234*atom1711+atom4088*atom1184+atom4086*atom1178-atom1721*atom1187+atom4076*atom1713)*atom1917+atom1918*(uW_RFR*atom4099+atom1180*atom4086-atom1240*atom1711+atom4088*atom1190+atom4104*atom1713-atom1193*atom1721) , 0.0 , 0.0 , 0.0 , atom4146*atom1917+atom4159*atom1919+atom4152*atom1918 , atom1917*(atom4178+atom4027)+(atom4193+atom4068)*atom1919+(atom4185+atom4052)*atom1918 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0;
atom2168 , atom2169 , atom2170 , (atom1988*atom3774+atom3794*uW_RFL+atom3778*atom1969+atom1987*atom1181+atom3799*atom1971+atom1981*atom3771)*atom2169+(atom1987*atom1174+atom3843*atom1971+atom1981*atom3814+atom3822*atom1969+atom3811*atom1988+uW_RFL*atom3838)*atom2170+(atom1987*atom1179+atom3756*uW_RFL+atom1988*atom3735+atom1981*atom3733+atom3752*atom1971+atom3760*atom1969)*atom2168 , -(atom1988*atom1195-atom3916*atom1969-atom3935*atom1971-atom1981*atom1194-atom3930*uW_RFL)*atom2170+atom2169*(atom3896*uW_RFL+atom1981*atom1190+atom3901*atom1971-atom1988*atom1193+atom3882*atom1969)+atom2168*(atom3862*atom1971+atom3866*uW_RFL+atom1981*atom1184-atom1988*atom1187+atom3870*atom1969) , -(atom1969*atom1237+uW_RFL*atom1279+atom1193*atom1981+atom1988*atom1190+atom1282*atom1971+atom1180*atom1987)*atom2168+(atom1276*atom1971+atom1981*atom1187+atom1987*atom1178+atom1988*atom1184+atom1231*atom1969+uW_RFL*atom1273)*atom2169 , atom2169*(atom3986*atom1971+atom3970*atom1969+atom1180*atom1984-atom1987*atom1190+atom3981*uW_RFL)+(atom4014*atom1971+uW_RFL*atom4009+atom3998*atom1969+atom1984*atom1175-atom1987*atom1194)*atom2170-(atom1987*atom1184-atom3955*atom1971-atom3959*uW_RFL-atom3961*atom1969-atom1984*atom1178)*atom2168 , 0.0 , atom1193*atom2169+atom1195*atom2170+atom1187*atom2168 , atom2168*(atom4518+atom4488*atom1187+atom4500*atom1184+atom4496*atom1178)+(atom4486+atom4500*atom1194+atom1195*atom4488+atom1175*atom4496)*atom2170+atom2169*(atom1180*atom4496+atom4500*atom1190+atom4508+atom1193*atom4488) , (atom4536*atom1184+atom4080*uW_RFL-atom1234*atom1969-atom1975*atom1187+atom4534*atom1178+atom4076*atom1971)*atom2168+atom2169*(atom1180*atom4534-atom1240*atom1969+uW_RFL*atom4099-atom1193*atom1975+atom4104*atom1971+atom4536*atom1190)-(atom1969*atom1246-atom1175*atom4534-atom4125*uW_RFL+atom1975*atom1195-atom4130*atom1971-atom4536*atom1194)*atom2170 , 0.0 , 0.0 , 0.0 , atom4146*atom2168+atom4159*atom2170+atom4152*atom2169 , -(atom4185-atom4508)*atom2169-(atom4178-atom4518)*atom2168+(atom4486-atom4193)*atom2170 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0;
atom2424 , atom2425 , atom2426 , (atom4804*atom2222+atom3811*atom2244+atom4809*uW_RRR+atom2243*atom1174+atom3822*atom2220+atom2237*atom3814)*atom2426+atom2425*(atom3778*atom2220+atom4762*uW_RRR+atom3771*atom2237+atom2244*atom3774+atom2243*atom1181+atom4768*atom2222)+atom2424*(atom3735*atom2244+atom2243*atom1179+atom4785*uW_RRR+atom2237*atom3733+atom2222*atom4791+atom3760*atom2220) , atom2425*(atom4818*uW_RRR-atom1193*atom2244+atom3882*atom2220+atom2222*atom4824+atom2237*atom1190)+(atom3916*atom2220+atom4854*atom2222+atom4859*uW_RRR-atom1195*atom2244+atom2237*atom1194)*atom2426+atom2424*(atom4837*uW_RRR+atom2222*atom4843+atom2237*atom1184+atom2220*atom3870-atom1187*atom2244) , atom2425*(uW_RRR*atom1310+atom2244*atom1184+atom2222*atom1313+atom2243*atom1178+atom1231*atom2220+atom2237*atom1187)-atom2424*(atom1180*atom2243+atom1316*uW_RRR+atom1190*atom2244+atom1319*atom2222+atom1193*atom2237+atom2220*atom1237) , atom2425*(atom4873*uW_RRR+atom1180*atom2240+atom2220*atom3970+atom2222*atom4879-atom2243*atom1190)-atom2424*(atom2243*atom1184-atom2220*atom3961-atom2222*atom4898-atom4892*uW_RRR-atom2240*atom1178)+(atom4914*uW_RRR+atom2220*atom3998+atom2222*atom4909+atom1175*atom2240-atom2243*atom1194)*atom2426 , 0.0 , atom2424*atom1187+atom1193*atom2425+atom1195*atom2426 , (atom4945*atom1184+atom4941*atom1178+atom4958+atom1187*atom4931)*atom2424+(atom1175*atom4941+atom1195*atom4931+atom4969+atom4945*atom1194)*atom2426+atom2425*(atom1193*atom4931+atom1180*atom4941+atom4945*atom1190+atom4928) , -atom2425*(atom2220*atom1240-atom2222*atom4981+atom1193*atom2229-atom4987*atom1190-atom4975*uW_RRR-atom1180*atom4985)+(atom1194*atom4987+atom5019*atom2222+atom1175*atom4985-atom1195*atom2229-atom2220*atom1246+atom5024*uW_RRR)*atom2426+(uW_RRR*atom5000+atom4985*atom1178-atom1187*atom2229+atom5006*atom2222+atom4987*atom1184-atom2220*atom1234)*atom2424 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , atom4152*atom2425+atom4146*atom2424+atom4159*atom2426 , atom2426*(atom5067+atom4969)+(atom5059+atom4958)*atom2424+(atom5052+atom4928)*atom2425 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0;
atom2675 , atom2676 , atom2677 , atom2675*(atom3735*atom2495+atom2478*atom4791+atom2488*atom3733+atom4785*uW_RRL+atom2476*atom3760+atom2494*atom1179)+atom2676*(uW_RRL*atom4762+atom2494*atom1181+atom3771*atom2488+atom4768*atom2478+atom3774*atom2495+atom2476*atom3778)+atom2677*(atom2476*atom3822+atom2488*atom3814+atom4809*uW_RRL+atom4804*atom2478+atom3811*atom2495+atom2494*atom1174) , atom2676*(atom2478*atom4824+uW_RRL*atom4818-atom1193*atom2495+atom2488*atom1190+atom2476*atom3882)+atom2675*(atom4837*uW_RRL+atom2478*atom4843-atom1187*atom2495+atom2476*atom3870+atom2488*atom1184)+atom2677*(atom2488*atom1194+atom2476*atom3916-atom1195*atom2495+atom4859*uW_RRL+atom2478*atom4854) , -atom2675*(atom1180*atom2494+atom2476*atom1237+atom1316*uW_RRL+atom1193*atom2488+atom1190*atom2495+atom1319*atom2478)+(atom1184*atom2495+uW_RRL*atom1310+atom2488*atom1187+atom2476*atom1231+atom2478*atom1313+atom2494*atom1178)*atom2676 , atom2675*(atom2491*atom1178+atom4892*uW_RRL-atom2494*atom1184+atom2476*atom3961+atom2478*atom4898)+(atom4873*uW_RRL+atom2476*atom3970+atom1180*atom2491+atom2478*atom4879-atom2494*atom1190)*atom2676+atom2677*(atom4914*uW_RRL+atom2478*atom4909-atom2494*atom1194+atom2476*atom3998+atom1175*atom2491) , 0.0 , atom2677*atom1195+atom2675*atom1187+atom1193*atom2676 , atom2677*(atom1194*atom5375+atom5364+atom5379*atom1195+atom1175*atom5371)+atom2675*(atom5379*atom1187+atom5375*atom1184+atom5401+atom5371*atom1178)+(atom1193*atom5379+atom1180*atom5371+atom1190*atom5375+atom5391)*atom2676 , -atom2677*(atom2476*atom1246-atom2478*atom5019-atom5413*atom1194+atom2482*atom1195-atom5024*uW_RRL-atom5411*atom1175)+atom2675*(atom2478*atom5006+uW_RRL*atom5000-atom2476*atom1234+atom5413*atom1184-atom2482*atom1187+atom5411*atom1178)-(atom1193*atom2482-atom2478*atom4981-atom5413*atom1190-atom5411*atom1180-atom4975*uW_RRL+atom2476*atom1240)*atom2676 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , atom2677*atom4159+atom4152*atom2676+atom4146*atom2675 , -atom2675*(atom5059-atom5401)+atom2676*(atom5391-atom5052)-atom2677*(atom5067-atom5364) , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0;
atom2933 , atom2934 , atom2935 , (atom5703*atom2727+atom2746*atom3733+atom2752*atom1179+atom2753*atom3735+atom5699*uW_FFR+atom2729*atom5695)*atom2933+atom2934*(atom2746*atom3771+atom2729*atom5654+atom2752*atom1181+atom2753*atom3774+atom5658*uW_FFR+atom5662*atom2727)+(atom5715*atom2727+atom2729*atom5736+uW_FFR*atom5731+atom2746*atom3814+atom2752*atom1174+atom3811*atom2753)*atom2935 , -atom2933*(atom2753*atom1187-atom2746*atom1184-atom5797*uW_FFR-atom2729*atom5793-atom5801*atom2727)+atom2934*(atom5768*atom2727+atom2729*atom5760+atom2746*atom1190+atom5764*uW_FFR-atom1193*atom2753)+atom2935*(uW_FFR*atom5825+atom2746*atom1194-atom2753*atom1195+atom5811*atom2727+atom2729*atom5830) , -(atom2753*atom1190+atom1180*atom2752+uW_FFR*atom1565+atom1524*atom2727+atom2729*atom1568+atom2746*atom1193)*atom2933+(atom2752*atom1178+atom2746*atom1187+atom1559*uW_FFR+atom2753*atom1184+atom2727*atom1518+atom2729*atom1562)*atom2934 , 0.0 , -(atom2752*atom1190-atom1180*atom2749-atom5857*uW_FFR-atom2729*atom5853-atom2727*atom5859)*atom2934-atom2935*(atom2752*atom1194-atom5904*uW_FFR-atom5893*atom2727-atom1175*atom2749-atom2729*atom5909)+(atom2729*atom5880+atom5884*uW_FFR+atom2749*atom1178+atom5886*atom2727-atom2752*atom1184)*atom2933 , 0.0 , 0.0 , 0.0 , atom1193*atom2934+atom2935*atom1195+atom1187*atom2933 , atom2933*(atom5942*atom1184+atom5955+atom5928*atom1187+atom5938*atom1178)+atom2934*(atom5925+atom1193*atom5928+atom1180*atom5938+atom5942*atom1190)+atom2935*(atom5961+atom1175*atom5938+atom5942*atom1194+atom5928*atom1195) , (atom5978*uW_FFR+atom1180*atom5984-atom1193*atom2737-atom1527*atom2727+atom1190*atom5986+atom2729*atom5974)*atom2934-atom2935*(atom2737*atom1195+atom1533*atom2727-atom1175*atom5984-atom2729*atom6023-atom6018*uW_FFR-atom1194*atom5986)+atom2933*(atom1184*atom5986-atom1521*atom2727-atom2737*atom1187+atom5984*atom1178+atom2729*atom6001+atom6005*uW_FFR) , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , atom6050*atom2933+atom6044*atom2934+atom2935*atom6057 , (atom5925+atom6076)*atom2934+atom2935*(atom5961+atom6091)+(atom6083+atom5955)*atom2933 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0;
atom3184 , atom3185 , atom3186 , atom3186*(atom5715*atom2985+uW_FFL*atom5731+atom2997*atom3814+atom3811*atom3004+atom3003*atom1174+atom5736*atom2987)+atom3185*(atom1181*atom3003+atom3004*atom3774+atom5662*atom2985+uW_FFL*atom5658+atom2997*atom3771+atom2987*atom5654)+(atom3735*atom3004+atom5695*atom2987+atom2997*atom3733+atom5703*atom2985+uW_FFL*atom5699+atom3003*atom1179)*atom3184 , -(atom3004*atom1187-atom5793*atom2987-atom2997*atom1184-atom5801*atom2985-uW_FFL*atom5797)*atom3184+atom3186*(atom2997*atom1194+uW_FFL*atom5825+atom2987*atom5830+atom5811*atom2985-atom3004*atom1195)+atom3185*(atom5768*atom2985-atom1193*atom3004+atom2997*atom1190+uW_FFL*atom5764+atom5760*atom2987) , -(atom3004*atom1190+atom2987*atom1568+uW_FFL*atom1565+atom1193*atom2997+atom1180*atom3003+atom2985*atom1524)*atom3184+atom3185*(atom2987*atom1562+uW_FFL*atom1559+atom2997*atom1187+atom2985*atom1518+atom3003*atom1178+atom3004*atom1184) , 0.0 , (atom3000*atom1178+atom5884*uW_FFL+atom2987*atom5880-atom3003*atom1184+atom5886*atom2985)*atom3184+atom3186*(atom5909*atom2987+atom2985*atom5893+atom5904*uW_FFL-atom1194*atom3003+atom3000*atom1175)+atom3185*(atom2987*atom5853-atom1190*atom3003+atom2985*atom5859+uW_FFL*atom5857+atom3000*atom1180) , 0.0 , 0.0 , 0.0 , atom1193*atom3185+atom3186*atom1195+atom1187*atom3184 , atom3185*(atom6381*atom1190+atom1180*atom6377+atom1193*atom6385+atom6405)+atom3186*(atom6390+atom1175*atom6377+atom6381*atom1194+atom6385*atom1195)+(atom6395+atom6385*atom1187+atom6381*atom1184+atom6377*atom1178)*atom3184 , (uW_FFL*atom5978+atom2987*atom5974+atom1180*atom6415-atom1193*atom2991+atom6417*atom1190-atom1527*atom2985)*atom3185+(atom6415*atom1178+atom6417*atom1184+atom2987*atom6001+uW_FFL*atom6005-atom2985*atom1521-atom1187*atom2991)*atom3184+atom3186*(atom2987*atom6023+atom6417*atom1194+atom1175*atom6415+atom6018*uW_FFL-atom2985*atom1533-atom1195*atom2991) , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , atom6044*atom3185+atom3186*atom6057+atom6050*atom3184 , -atom3185*(atom6076-atom6405)+atom3186*(atom6390-atom6091)+(atom6395-atom6083)*atom3184 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0;
atom3439 , atom3440 , atom3441 , atom3439*(atom3735*atom3260+atom3253*atom3733+atom3236*atom5703+atom3259*atom1179+atom6688*atom3238+uW_FRR*atom6692)+atom3440*(atom3260*atom3774+atom3259*atom1181+atom3236*atom5662+atom6674*uW_FRR+atom3238*atom6670+atom3253*atom3771)+(atom3811*atom3260+atom6648*uW_FRR+atom3253*atom3814+atom3236*atom5715+atom3259*atom1174+atom6653*atom3238)*atom3441 , atom3439*(atom6742*uW_FRR+atom3253*atom1184-atom1187*atom3260+atom3238*atom6738+atom3236*atom5801)-atom3440*(atom1193*atom3260-atom3253*atom1190-atom3236*atom5768-uW_FRR*atom6726-atom6722*atom3238)+atom3441*(atom6709*atom3238+atom3253*atom1194+atom6704*uW_FRR+atom3236*atom5811-atom1195*atom3260) , -(atom1193*atom3253+atom3236*atom1524+atom1604*atom3238+atom1180*atom3259+atom1190*atom3260+uW_FRR*atom1601)*atom3439+atom3440*(atom3260*atom1184+atom3253*atom1187+atom3236*atom1518+uW_FRR*atom1595+atom3259*atom1178+atom1598*atom3238) , 0.0 , (uW_FRR*atom6759-atom3259*atom1194+atom1175*atom3256+atom3236*atom5893+atom6764*atom3238)*atom3441+(atom3256*atom1178+atom3238*atom6793-atom3259*atom1184+atom3236*atom5886+atom6797*uW_FRR)*atom3439-atom3440*(atom3259*atom1190-uW_FRR*atom6781-atom3236*atom5859-atom6777*atom3238-atom1180*atom3256) , 0.0 , 0.0 , 0.0 , atom1195*atom3441+atom3439*atom1187+atom3440*atom1193 , atom3441*(atom6831*atom1195+atom1175*atom6826+atom6822*atom1194+atom6813)+atom3440*(atom1180*atom6826+atom6831*atom1193+atom6822*atom1190+atom6843)+(atom6822*atom1184+atom6826*atom1178+atom6853+atom6831*atom1187)*atom3439 , -(atom3245*atom1195+atom3236*atom1533-atom6866*atom3238-atom6871*atom1175-atom6861*uW_FRR-atom1194*atom6869)*atom3441+atom3440*(atom6889*uW_FRR+atom6885*atom3238-atom1193*atom3245-atom3236*atom1527+atom1190*atom6869+atom1180*atom6871)+atom3439*(atom1184*atom6869-atom3236*atom1521+atom6871*atom1178-atom3245*atom1187+atom3238*atom6903+atom6907*uW_FRR) , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , atom3439*atom6050+atom6057*atom3441+atom3440*atom6044 , atom3440*(atom6944+atom6843)+(atom6853+atom6951)*atom3439+(atom6937+atom6813)*atom3441 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0;
atom3689 , atom3690 , atom3691 , (atom1179*atom3509+atom3735*atom3510+atom3493*atom6688+uW_FRL*atom6692+atom3733*atom3503+atom5703*atom3491)*atom3689+(atom3510*atom3774+atom3493*atom6670+atom1181*atom3509+atom6674*uW_FRL+atom3771*atom3503+atom3491*atom5662)*atom3690+(atom5715*atom3491+atom3811*atom3510+atom6648*uW_FRL+atom3509*atom1174+atom6653*atom3493+atom3814*atom3503)*atom3691 , atom3689*(atom1184*atom3503+atom3493*atom6738-atom3510*atom1187+atom6742*uW_FRL+atom5801*atom3491)+atom3690*(atom5768*atom3491-atom1193*atom3510+atom3493*atom6722+uW_FRL*atom6726+atom1190*atom3503)-atom3691*(atom3510*atom1195-atom6704*uW_FRL-atom6709*atom3493-atom5811*atom3491-atom1194*atom3503) , -(atom1604*atom3493+atom1193*atom3503+atom1180*atom3509+atom3510*atom1190+uW_FRL*atom1601+atom3491*atom1524)*atom3689+(uW_FRL*atom1595+atom3509*atom1178+atom3510*atom1184+atom1187*atom3503+atom1598*atom3493+atom3491*atom1518)*atom3690 , 0.0 , (uW_FRL*atom6781+atom1180*atom3506-atom1190*atom3509+atom3491*atom5859+atom6777*atom3493)*atom3690+(uW_FRL*atom6759+atom3491*atom5893+atom3506*atom1175-atom1194*atom3509+atom3493*atom6764)*atom3691-(atom3509*atom1184-atom6797*uW_FRL-atom5886*atom3491-atom3506*atom1178-atom3493*atom6793)*atom3689 , 0.0 , 0.0 , 0.0 , atom1193*atom3690+atom1195*atom3691+atom1187*atom3689 , (atom7262*atom1195+atom7285+atom1175*atom7254+atom1194*atom7258)*atom3691+(atom7254*atom1178+atom7258*atom1184+atom7262*atom1187+atom7274)*atom3689+atom3690*(atom1193*atom7262+atom1190*atom7258+atom7247+atom1180*atom7254) , (atom6866*atom3493+atom1194*atom7296+atom1175*atom7294-atom3491*atom1533+atom6861*uW_FRL-atom1195*atom3497)*atom3691+(atom7294*atom1178+atom3493*atom6903-atom3491*atom1521+atom7296*atom1184-atom1187*atom3497+atom6907*uW_FRL)*atom3689+atom3690*(atom6889*uW_FRL+atom6885*atom3493-atom1193*atom3497+atom7296*atom1190-atom1527*atom3491+atom1180*atom7294) , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , atom6050*atom3689+atom6044*atom3690+atom6057*atom3691 , (atom7274-atom6951)*atom3689-(atom6937-atom7285)*atom3691-atom3690*(atom6944-atom7247) , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0];

%endfunction
